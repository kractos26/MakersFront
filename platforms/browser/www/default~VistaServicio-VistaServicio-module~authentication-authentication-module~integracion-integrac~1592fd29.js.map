{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-drop.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-item.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-like-object.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-select.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-type.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-upload.module.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-uploader.class.js","webpack:///./node_modules/ng2-file-upload/index.js","webpack:///./src/app/modelos/BasicInformation.model.ts","webpack:///./src/app/modelos/servicefavorite.model.ts","webpack:///./src/app/modelos/servicespacemultimedia.model.ts","webpack:///./src/app/services/Publicaciones-service.service.ts","webpack:///./src/app/services/Search-service.service.ts","webpack:///./src/app/utilidades/Alerta/alerta.component.html","webpack:///./src/app/utilidades/Alerta/alerta.component.ts","webpack:///./src/app/utilidades/BackButton/BackButton.component.html","webpack:///./src/app/utilidades/BackButton/BackButton.component.ts","webpack:///./src/app/utilidades/ListaSeleccion/ListaSeleccion.component.html","webpack:///./src/app/utilidades/ListaSeleccion/ListaSeleccion.component.ts","webpack:///./src/app/utilidades/ListaSeleccion/ListaSeleccion.scss","webpack:///./src/app/utilidades/ServiceBasicView/ServiceBasicView.component.html","webpack:///./src/app/utilidades/ServiceBasicView/ServiceBasicView.component.ts","webpack:///./src/app/utilidades/ServiceBasicView/ServiceBasicView.scss","webpack:///./src/app/utilidades/agregarfavoritos/agregarfavoritos.component.html","webpack:///./src/app/utilidades/agregarfavoritos/agregarfavoritos.component.scss","webpack:///./src/app/utilidades/agregarfavoritos/agregarfavoritos.component.ts","webpack:///./src/app/utilidades/calificacion/calificacion.component.html","webpack:///./src/app/utilidades/calificacion/calificacion.component.ts","webpack:///./src/app/utilidades/file-upload/upload.component.html","webpack:///./src/app/utilidades/file-upload/upload.component.ts","webpack:///./src/app/utilidades/file-upload/upload.scss","webpack:///./src/app/utilidades/utilidades.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE4E;AACd;AAC5B;AACkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,sDAAQ,gBAAgB,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oFAAoF;AACtH;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,mGAAmG,EAAE;AAC9I,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA,wBAAwB,yEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oDAAoD;AACtF;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbqDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA,iBAAiB,sEAAsE;AACvF;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,iFAAiF;AAClG;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEynB;AACznB;;;;;;;;;;;;;ACx2Da;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;;;;;;;;;;;;;AC/Ga;AACb,+BAA+B,mBAAO,CAAC,sGAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7Ha;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;;;;;;;;;;;;;ACxDa;AACblKa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,eAAe,mBAAO,CAAC,uEAAiB;AACxC,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D,8BAA8B,mBAAO,CAAC,oGAAyB;AAC/D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACvBa;AACb,aAAa,mBAAO,CAAC,iEAAe;AACpC,+BAA+B,mBAAO,CAAC,sGAA0B;AACjE,wBAAwB,mBAAO,CAAC,wFAAmB;AACnD,wBAAwB,mBAAO,CAAC,wFAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,0BAA0B,EAAE;AACnG;AACA;AACA;AACA,mCAAmC,mCAAmC,EAAE;AACxE;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB,EAAE;AAC7E;AACA;AACA;AACA,qCAAqC,4CAA4C,EAAE;AACnF,2CAA2C,kCAAkC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAgE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnZa;AACb;AACA;AACA;AACA,SAAS,mBAAO,CAAC,gHAAqC;AACtD,SAAS,mBAAO,CAAC,4GAAmC;AACpD,SAAS,mBAAO,CAAC,4GAAmC;AACpD,SAAS,mBAAO,CAAC,oGAA+B;AAChD,SAAS,mBAAO,CAAC,kHAAsC;AACvD,2BAA2B,mBAAO,CAAC,0GAAkC;AACrE;;;;;;;;;;;;;ACVA;AAAA;AAAA;IAAA;IASA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IAAA;IAOA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IAAA;IAOA,CAAC;IAAD,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACP0C;AAEoB;AAGQ;AACK;AACD;AAgBrB;AActD;IA8BE,qCACU,IAAe,EACf,YAAiC,EACjC,OAA8B,EAE9B,cAA+C,EAC/C,qBAA0D,EAC1D,oBAAwD,EACxD,wBAAkE,EAClE,4BAA0E,EAC1E,oBAA0D,EAC1D,4BAA4D,EAC5D,2BAAwE,EACxE,mBAAwD,EAExD,0BAAsE,EACtE,4BAA0E,EAC1E,yBAAoE,EACpE,2BAAwE,EACxE,wBAAkE,EAClE,mBAAwD,EACxD,yCAA2F,EAE3F,2BAAwE,EACxE,wBAAkE,EAClE,6BAA4E,EAC5E,gCAAkF,EAClF,8BAA8E;QA1B9E,SAAI,GAAJ,IAAI,CAAW;QACf,iBAAY,GAAZ,YAAY,CAAqB;QACjC,YAAO,GAAP,OAAO,CAAuB;QAE9B,mBAAc,GAAd,cAAc,CAAiC;QAC/C,0BAAqB,GAArB,qBAAqB,CAAqC;QAC1D,yBAAoB,GAApB,oBAAoB,CAAoC;QACxD,6BAAwB,GAAxB,wBAAwB,CAA0C;QAClE,iCAA4B,GAA5B,4BAA4B,CAA8C;QAC1E,yBAAoB,GAApB,oBAAoB,CAAsC;QAC1D,iCAA4B,GAA5B,4BAA4B,CAAgC;QAC5D,gCAA2B,GAA3B,2BAA2B,CAA6C;QACxE,wBAAmB,GAAnB,mBAAmB,CAAqC;QAExD,+BAA0B,GAA1B,0BAA0B,CAA4C;QACtE,iCAA4B,GAA5B,4BAA4B,CAA8C;QAC1E,8BAAyB,GAAzB,yBAAyB,CAA2C;QACpE,gCAA2B,GAA3B,2BAA2B,CAA6C;QACxE,6BAAwB,GAAxB,wBAAwB,CAA0C;QAClE,wBAAmB,GAAnB,mBAAmB,CAAqC;QACxD,8CAAyC,GAAzC,yCAAyC,CAAkD;QAE3F,gCAA2B,GAA3B,2BAA2B,CAA6C;QACxE,6BAAwB,GAAxB,wBAAwB,CAA0C;QAClE,kCAA6B,GAA7B,6BAA6B,CAA+C;QAC5E,qCAAgC,GAAhC,gCAAgC,CAAkD;QAClF,mCAA8B,GAA9B,8BAA8B,CAAgD;QAtDxF,yBAAoB,GAAG,oEAAkB,GAAG,gBAAgB,CAAC;QAC7D,2BAAsB,GAAG,oEAAkB,GAAG,oBAAoB,CAAC;QACnE,qBAAgB,GAAG,oEAAkB,GAAG,YAAY,CAAC;QACrD,aAAQ,GAAG,oEAAkB,GAAG,YAAY,CAAC;QAa7C,kBAAa,GAAiB,EAAE,CAAC;QACjC,wCAAmC,GAA8B,EAAE,CAAC;QAEpE,gCAA2B,GAA2B,EAAE,CAAC;QACzD,6BAAwB,GAAwB,EAAE,CAAC;QACnD,kCAA6B,GAA6B,EAAE,CAAC;QAC7D,qCAAgC,GAAgC,EAAE,CAAC;QACnE,mCAA8B,GAA8B,EAAE,CAAC;QAE/D,mBAAc,GAAsB,EAAE,CAAC;IA8BpC,CAAC;IAEG,4CAAM,GAAb,UAAc,kBAA2B;QAErC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,QAAO,IAAI,CAAC,kBAAkB,EAC9B;YACE,KAAK,WAAW;gBACd,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBACjC,MAAM;YACR,KAAK,aAAa;gBAChB,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBACnC,MAAM;YACR,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC7B,MAAM;SACT;IACL,CAAC;IAEM,8DAAwB,GAA/B;QAAA,iBA0EC;QAxEC,IAAI,UAAiB,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChF,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC3F,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzF,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,yBAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACnG,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACvG,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjG,IAAI,CAAC,yCAAyC,CAAC,iBAAiB,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC;QAErI,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAE1B,IAAG,IAAI,CAAC,kBAAkB,IAAI,WAAW,EACzC;YACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;YAC7F,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,iBAAO;gBAEnC,KAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACnD,iBAAiB,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;SACzE;aACI,IAAG,IAAI,CAAC,kBAAkB,IAAI,aAAa,EAChD;YACI,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,mCAAmC,CAAC,CAAC;YACxF,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,CAAC;YAExE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;YACzG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,iBAAO;gBAEvC,KAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACnD,iBAAiB,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAC9D;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAO;oBAE9B,KAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,qBAAqB,GAAG,KAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;oBACxH,cAAc,EAAE,CAAC;gBACrB,CAAC,CAAC;aACL;YACD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAEvF,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;SACjF;aACI,IAAG,IAAI,CAAC,kBAAkB,IAAI,OAAO,EAC1C;YACI,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;YAE1E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YACzF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,iBAAO;gBAE/B,KAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACnD,iBAAiB,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAC9D;gBACE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAO;oBAE5B,KAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,qBAAqB,GAAG,KAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;oBACxH,cAAc,EAAE,CAAC;gBACrB,CAAC,CAAC;aACL;YAED,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvF,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;SACjE;IACH,CAAC;IAEM,iDAAW,GAAlB,UAAmB,YAAoB,EAAE,kBAA2B,EAAE,QAAiB;QAErF,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,YAAY,EAAU,YAAY,CAAC,QAAQ,EAAE;YAC7C,kBAAkB,EAAI,kBAAkB;YACxC,QAAQ,EAAc,QAAQ;SAC/B,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC/E,CAAC;IAEO,gEAA0B,GAAlC,UAAmC,iBAA0B;QAEvD,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;QACjI,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,0BAA0B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;QACrI,IAAI,CAAC,gCAAgC,CAAC,iBAAiB,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;QAC3I,IAAI,CAAC,8BAA8B,CAAC,iBAAiB,CAAC,2BAA2B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;IAC7I,CAAC;IAEO,wDAAkB,GAA1B;QAEE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEjC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACvG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YACrD,MAAM,EAAW,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YACrD,KAAK,EAAY,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC/C,WAAW,EAAa,IAAI,CAAC,WAAW;YACxC,eAAe,EAAS,IAAI,CAAC,eAAe;YAC5C,cAAc,EAAU,IAAI,CAAC,cAAc;YAC3C,kBAAkB,EAAM,IAAI,CAAC,kBAAkB;YAC/C,oBAAoB,EAAI,IAAI,CAAC,oBAAoB;YACjD,mBAAmB,EAAK,IAAI,CAAC,mBAAmB;YAChD,qBAAqB,EAAG,IAAI,CAAC,qBAAqB;YAClD,kBAAkB,EAAM,IAAI,CAAC,kBAAkB;YAC/C,mCAAmC,EAAG,IAAI,CAAC,mCAAmC;YAC9E,qBAAqB,EAAW,IAAI,CAAC,2BAA2B;YAChE,uBAAuB,EAAS,IAAI,CAAC,6BAA6B;YAClE,0BAA0B,EAAM,IAAI,CAAC,gCAAgC;YACrE,wBAAwB,EAAQ,IAAI,CAAC,8BAA8B;SACpE,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,oBAAoB,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC/F,CAAC;IAEO,0DAAoB,GAA5B;QAEE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEjC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACvG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YACrD,MAAM,EAAW,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YACrD,KAAK,EAAY,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC/C,WAAW,EAAmB,IAAI,CAAC,WAAW;YAC9C,eAAe,EAAe,IAAI,CAAC,eAAe;YAClD,cAAc,EAAgB,IAAI,CAAC,cAAc;YACjD,sBAAsB,EAAQ,IAAI,CAAC,sBAAsB;YACzD,oBAAoB,EAAU,IAAI,CAAC,oBAAoB;YACvD,mBAAmB,EAAW,IAAI,CAAC,mBAAmB;YACtD,qBAAqB,EAAS,IAAI,CAAC,qBAAqB;YACxD,kBAAkB,EAAY,IAAI,CAAC,kBAAkB;YACrD,aAAa,EAAiB,IAAI,CAAC,aAAa;YAChD,qBAAqB,EAAS,IAAI,CAAC,2BAA2B;YAC9D,kBAAkB,EAAW,IAAI,CAAC,wBAAwB;YAC1D,uBAAuB,EAAO,IAAI,CAAC,6BAA6B;YAChE,0BAA0B,EAAI,IAAI,CAAC,gCAAgC;YACnE,wBAAwB,EAAM,IAAI,CAAC,8BAA8B;SAClE,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,sBAAsB,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjG,CAAC;IAEO,oDAAc,GAAtB;QAEE,QAAQ,CAAC;QACT,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEjC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACvG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YACrD,MAAM,EAAW,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YACrD,KAAK,EAAY,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC/C,WAAW,EAAmB,IAAI,CAAC,WAAW;YAC9C,eAAe,EAAe,IAAI,CAAC,eAAe;YAClD,cAAc,EAAgB,IAAI,CAAC,cAAc;YACjD,cAAc,EAAgB,IAAI,CAAC,cAAc;YACjD,oBAAoB,EAAU,IAAI,CAAC,oBAAoB;YACvD,sBAAsB,EAAQ,IAAI,CAAC,sBAAsB;YACzD,mBAAmB,EAAW,IAAI,CAAC,mBAAmB;YACtD,qBAAqB,EAAS,IAAI,CAAC,qBAAqB;YACxD,kBAAkB,EAAY,IAAI,CAAC,kBAAkB;YACrD,aAAa,EAAiB,IAAI,CAAC,aAAa;YAChD,mCAAmC,EAAG,IAAI,CAAC,mCAAmC;YAC9E,qBAAqB,EAAS,IAAI,CAAC,2BAA2B;YAC9D,kBAAkB,EAAW,IAAI,CAAC,wBAAwB;YAC1D,uBAAuB,EAAO,IAAI,CAAC,6BAA6B;YAChE,0BAA0B,EAAI,IAAI,CAAC,gCAAgC;YACnE,wBAAwB,EAAM,IAAI,CAAC,8BAA8B;SAClE,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,gBAAgB,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC3F,CAAC;IAGO,8DAAwB,GAAhC;QAAA,iBA6FC;QA3FC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC/G,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC5G,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;QAC7F,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;QACzG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAEjF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC9H,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,yBAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC3H,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEzG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAiB,gBAAgB,EAAE,UAAC,KAAwB,IAAO,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5H,IAAI,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAC5E,CAAC,IAAI,CAAC,kBAAkB,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;gBAChF,CAAC,IAAI,CAAC,kBAAkB,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/F,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,KAAI,iBAAiB,GAAG,CAAC,EAAC,iBAAiB,GAAG,kBAAkB,EAAE,iBAAiB,EAAE,EACrF;YACI,IAAI,qBAAqB,GAAG,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;YAC1J,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAE7D,IAAI,uBAAuB,GAAG,IAAI,CAAC,6BAA6B,CAAC,cAAc,CAAC,0BAA0B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;YAChK,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAEjE,IAAG,IAAI,CAAC,kBAAkB,IAAI,WAAW,IAAI,IAAI,CAAC,kBAAkB,IAAI,aAAa,EACrF;gBACI,IAAI,0BAA0B,GAAG,IAAI,CAAC,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;gBACzK,IAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,0BAA0B,IAAI,IAAI,EAC3F;oBACI,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,QAAQ,EAAhC,CAAgC,CAAC;oBAC7E,0BAA0B,CAAC,OAAO,CAAC,gBAAM;wBAErC,MAAM,CAAC,gBAAgB,GAAG,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;oBACnG,CAAC,CAAC,CAAC;iBACN;gBACD,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;gBAEvE,IAAI,wBAAwB,GAAG,IAAI,CAAC,8BAA8B,CAAC,cAAc,CAAC,2BAA2B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;gBACnK,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;aACtE;SACJ;QAED,IAAG,IAAI,CAAC,kBAAkB,IAAI,OAAO,EACrC;YACI,IAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC;YAC3C,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;SAC5C;QAED,IAAI,CAAC,mCAAmC,GAAG,IAAI,CAAC,yCAAyC,CAAC,cAAc,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC;QAC7K,IAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,IAAI,CAAC,mCAAmC,IAAI,IAAI,IAAI,IAAI,CAAC,mCAAmC,CAAC,MAAM,GAAG,CAAC,EAChK;YACI,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,QAAQ,EAAhC,CAAgC,CAAC;YAC7E,IAAI,CAAC,mCAAmC,CAAC,OAAO,CAAC,gBAAM;gBAEnD,MAAM,CAAC,gBAAgB,GAAG,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;YACnG,CAAC,CAAC,CAAC;SACN;QAED,iBAAiB,GAAG,CAAC,CAAC;QACtB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAC9D;YACI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAI;gBAE3B,IAAI,kBAAkB,GAAG,KAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,qBAAqB,GAAG,KAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;gBACjJ,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAEvD,IAAG,KAAI,CAAC,kBAAkB,IAAI,OAAO,EACrC;oBACI,IAAI,0BAA0B,GAAG,KAAI,CAAC,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,KAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;oBACzK,IAAG,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,cAAc,IAAI,IAAI,IAAI,0BAA0B,IAAI,IAAI,EAC3F;wBACI,IAAI,SAAS,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,QAAQ,EAAhC,CAAgC,CAAC;wBAC7E,0BAA0B,CAAC,OAAO,CAAC,gBAAM;4BAErC,MAAM,CAAC,gBAAgB,GAAG,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;wBACnG,CAAC,CAAC,CAAC;qBACN;oBACD,KAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;oBAEvE,IAAI,wBAAwB,GAAG,KAAI,CAAC,8BAA8B,CAAC,cAAc,CAAC,2BAA2B,GAAG,KAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;oBACnK,KAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;iBACtE;gBAED,iBAAiB,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IApWU,2BAA2B;QAJvC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAiCe,+DAAU;YACD,kFAAmB;YACxB,uFAAqB;YAEb,sFAAqB;YACd,sFAAqB;YACtB,sFAAqB;YACjB,sFAAqB;YACjB,sFAAqB;YAC7B,sFAAqB;YACb,sFAAqB;YACtB,sFAAqB;YAC7B,sFAAqB;YAEd,sFAAqB;YACnB,sFAAqB;YACxB,sFAAqB;YACnB,sFAAqB;YACxB,sFAAqB;YAC1B,sFAAqB;YACC,sFAAqB;YAEnC,sFAAqB;YACxB,sFAAqB;YAChB,sFAAqB;YAClB,sFAAqB;YACvB,sFAAqB;OAzDrD,2BAA2B,CAuWvC;IAAD,kCAAC;CAAA;AAvWuC;;;;;;;;;;;;;;;;;;;;;ACrCG;AAEoB;AAIa;AAgBtB;AAiBtD;IAKE,8BAAqB,IAAe,EAAU,OAA8B;QAAvD,SAAI,GAAJ,IAAI,CAAW;QAAU,YAAO,GAAP,OAAO,CAAuB;QAH5E,cAAS,GAAG,oEAAkB,GAAG,aAAa,CAAC;QAC/C,aAAQ,GAAG,oEAAkB,GAAG,OAAO,CAAC;IAEuC,CAAC;IAEzE,qCAAM,GAAb,UAAc,IAAa,EAAE,IAAa,EAAE,IAAa;QAEvD,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,WAAW,EAAW,IAAI;YAC1B,OAAO,EAAe,IAAI;YAC1B,eAAe,EAAO,IAAI;SAC3B,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,SAAS,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrG,CAAC;IAEM,8CAAe,GAAtB,UAAuB,OAAY;QAEjC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,WAAW,EAAW,IAAI;YAC1B,OAAO,EAAe,KAAK;YAC3B,eAAe,EAAO,KAAK;YAC3B,SAAS,EAAa,OAAO,CAAC,UAAU;YACxC,gBAAgB,EAChB;gBACI,QAAQ,EAAgB,OAAO,CAAC,MAAM;gBACtC,QAAQ,EAAgB,OAAO,CAAC,MAAM;gBACtC,IAAI,EAAoB,OAAO,CAAC,MAAM;gBACtC,SAAS,EAAe,OAAO,CAAC,SAAS;gBACzC,gBAAgB,EAAQ,OAAO,CAAC,gBAAgB;gBAChD,aAAa,EAAW,OAAO,CAAC,aAAa;aAChD;SACF,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,SAAS,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrG,CAAC;IAEM,gDAAiB,GAAxB,UAAyB,OAAY;QAEnC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,WAAW,EAAW,KAAK;YAC3B,OAAO,EAAe,KAAK;YAC3B,eAAe,EAAO,IAAI;YAC1B,SAAS,EAAa,OAAO,CAAC,UAAU;YACxC,oBAAoB,EACpB;gBACI,QAAQ,EAAgB,OAAO,CAAC,MAAM;gBACtC,QAAQ,EAAgB,OAAO,CAAC,MAAM;gBACtC,IAAI,EAAoB,OAAO,CAAC,MAAM;gBACtC,SAAS,EAAe,OAAO,CAAC,SAAS;gBACzC,gBAAgB,EAAQ,OAAO,CAAC,gBAAgB;gBAChD,0BAA0B,EAAE,OAAO,CAAC,0BAA0B;aACjE;SACF,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,SAAS,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrG,CAAC;IAEM,0CAAW,GAAlB,UAAmB,OAAY;QAE7B,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,WAAW,EAAW,KAAK;YAC3B,OAAO,EAAe,IAAI;YAC1B,eAAe,EAAO,KAAK;YAC3B,SAAS,EAAa,OAAO,CAAC,UAAU;YACxC,YAAY,EACZ;gBACI,QAAQ,EAAgB,OAAO,CAAC,MAAM;gBACtC,QAAQ,EAAgB,OAAO,CAAC,MAAM;gBACtC,IAAI,EAAoB,OAAO,CAAC,MAAM;gBACtC,SAAS,EAAe,OAAO,CAAC,SAAS;gBACzC,gBAAgB,EAAQ,OAAO,CAAC,gBAAgB;gBAChD,aAAa,EAAW,OAAO,CAAC,aAAa;aAChD;SACF,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,SAAS,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrG,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,oBAAsC;QAE5D,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,UAAU,EACV;gBACE,WAAW,EAAS,oBAAoB,CAAC,WAAW;gBACpD,SAAS,EAAW,oBAAoB,CAAC,SAAS;gBAClD,MAAM,EAAc,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;gBACxD,UAAU,EAAU,oBAAoB,CAAC,UAAU;aACpD;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,QAAQ,GAAG,iBAAiB,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACzG,CAAC;IAEM,oDAAqB,GAA5B;QAEE,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GAAG;YACf,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;SACrD,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1H,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,IAAa,EAAE,IAAa,EAAE,IAAa;QAEjE,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GACd;YACE,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,MAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,WAAW,EAAW,IAAI;YAC1B,OAAO,EAAe,IAAI;YAC1B,eAAe,EAAO,IAAI;YAC1B,gBAAgB,EAAM,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE;YACtE,YAAY,EAAU,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE;YACtE,oBAAoB,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE;SACvE,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,SAAS,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrG,CAAC;IAEM,6CAAc,GAArB,UAAyB,cAAsB,EAAE,UAAkB,EAAE,OAAsB,EAAE,aAA4B,EAAE,cAA6B;QAAnF,wCAAsB;QAAE,oDAA4B;QAAE,sDAA6B;QAEtJ,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GACd;YACE,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,SAAS,EAAa,UAAU;YAChC,aAAa,EAAS,aAAa;YACnC,cAAc,EAAQ,cAAc;YACpC,OAAO,EAAe,OAAO;SAC9B,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAqB,IAAI,CAAC,QAAQ,GAAG,cAAc,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACxG,CAAC;IAEM,4CAAa,GAApB,UAAwB,cAAsB,EAAE,UAAkB,EAAE,OAAsB,EAAE,aAA4B,EAAE,cAA6B;QAAnF,wCAAsB;QAAE,oDAA4B;QAAE,sDAA6B;QAErJ,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,6BAA6B,EAAE,GAAG,EAAC,CAAC,CAAC;QACxG,IAAM,QAAQ,GACd;YACE,aAAa,EAAS,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC1D,KAAK,EAAiB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACpD,SAAS,EAAa,UAAU;YAChC,aAAa,EAAS,aAAa;YACnC,cAAc,EAAQ,cAAc;YACpC,OAAO,EAAe,OAAO;SAC9B,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAA2B,IAAI,CAAC,QAAQ,GAAG,cAAc,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9G,CAAC;IAjLU,oBAAoB;QAJhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAO0B,+DAAU,EAAmB,uFAAqB;OALjE,oBAAoB,CAkLhC;IAAD,2BAAC;CAAA;AAlLgC;;;;;;;;;;;;ACvCjC,8HAA8H,iBAAiB,qB;;;;;;;;;;;;;;;;;;;ACAjG;AACW;AAC1B;AAa/B;IAIE;QAFiB,WAAM,GAAkB,EAAE,CAAC;QAMjC,aAAQ,GAAG,IAAI,4CAAO,EAAU,CAAC;QAE1C,sBAAiB,GAAG,KAAK,CAAC;QAJ1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAa,IAAK,aAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAC5E,CAAC;IAMD,kCAAQ,GAAR;QAAA,iBAKA;QAJC,UAAU,CAAC,cAAM,QAAC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAA/B,CAA+B,EAAE,CAAC,CAAC,CAAC;QAErD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAO,IAAI,QAAC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,EAA/B,CAA+B,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mEAAY,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,cAAM,QAAC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAA5B,CAA4B,CAAC,CAAC;IACvF,CAAC;IAEO,oCAAU,GAAjB,UAAkB,KAAa;QAC9B,IAAM,KAAK,GAAW,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IArBS;QAAR,2DAAK,EAAE;wEAAgB,KAAK;mDAAc;IAFjC,eAAe;QAX3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAQvC,CAAC;;OACW,eAAe,CAwB3B;IAAD,sBAAC;CAAA;AAxB2B;;;;;;;;;;;;ACf5B,iJAAiJ,gB;;;;;;;;;;;;;;;;;ACAxF;AAMzD;IAEI;IAAe,CAAC;IAEhB,sCAAQ,GAAR;IAEA,CAAC;IANQ,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;SAC3C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACNhC,0KAA0K,gFAAgF,eAAe,0FAA0F,+EAA+E,sPAAsP,+CAA+C,aAAa,0BAA0B,mCAAmC,mCAAmC,mBAAmB,oCAAoC,uIAAuI,qEAAqE,kF;;;;;;;;;;;;;;;;;;;;ACAvgC;AACY;AACI;AAShF;IAOI,iCAAoB,YAAiC,EAC3C,eAA4C;QADlC,iBAAY,GAAZ,YAAY,CAAqB;QAC3C,oBAAe,GAAf,eAAe,CAA6B;QANtD,sBAAiB,GAAW,EAAE,CAAC;QAC/B,oBAAe,GAAkB,EAAE;IAOnC,CAAC;IAED,0CAAQ,GAAR;QAAA,iBA6CC;QA3CG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC5F,IAAG,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI;YACxD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,UAAC,KAAW;YAE1E,IAAG,KAAI,CAAC,aAAa,CAAC,OAAO,IAAI,KAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,IAAI,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAC5G;gBACI,IAAI,QAAQ,GAAS,EAAE,CAAC;gBAExB,KAAI,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,EACpF;oBACI,KAAI,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,EAC7C;wBACI,IAAG,KAAK,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,EAC5G;4BACI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;yBAC9B;qBACJ;oBAED,IAAG,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,IAAI,KAAI,CAAC,aAAa,CAAC,eAAe,IAAI,IAAI,EACpF;wBACI,KAAK,GAAG,QAAQ,CAAC;qBACpB;iBACJ;gBAED,KAAK,GAAG,QAAQ,CAAC;aACpB;YAED,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,KAAK,CAAC,OAAO,CAAC,cAAI;gBAEd,IAAI,kBAAkB,GAAG,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAzE,CAAyE,CAAC,CAAC;gBAC1I,KAAI,CAAC,eAAe,CAAC,IAAI,CACzB;oBACI,EAAE,EAAY,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC;oBAClD,IAAI,EAAU,IAAI,CAAC,MAAM,CAAC;oBAC1B,OAAO,EAAO,CAAC,kBAAkB,IAAI,CAAC,CAAC,CAAC;oBACxC,eAAe,EAAG,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,IAAI,EAAE,IAAI,kBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE;iBACzL,CAAC,CAAC;gBACH,kBAAkB,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,wDAAsB,GAA9B,UAA+B,QAAa,EAAE,KAAW;QAAzD,iBAaC;QAXG,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;QACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,EAAE,EAAhD,CAAgD,CAAC,CAAC;QACvG,IAAG,QAAQ,IAAI,CAAC,CAAC,EACjB;YACE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC;SAClF;QAED,IAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAC1C;YACI,IAAI,CAAC,+BAA+B,EAAE,CAAC;SAC1C;IACL,CAAC;IAEO,qDAAmB,GAA3B,UAA4B,QAAa;QAAzC,iBAqCC;QAnCG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,EAAE,QAAQ,CAAC,CAAC;QAE7D,IAAI,KAAK,GAAa,CAAC,QAAQ,CAAC,OAAO,CAAC;QACxC,QAAQ,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;QAErC,IAAG,KAAK,EACR;YACE,IAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EACtC;gBACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,cAAI,IAAM,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;gBAC5B,QAAQ,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;aACtC;YAED,IAAI,aAAa,GAAQ,EAAE,CAAC;YAC5B,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC;YAC5D,IAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,IAAI,EAAE;gBAC3C,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,QAAQ,CAAC,eAAe,CAAC;YAErF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC;SAC3C;aAED;YACE,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,EAAE,EAAhD,CAAgD,CAAC,CAAC;YACvG,IAAG,QAAQ,IAAI,CAAC,CAAC,EACjB;gBACE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;aAC3C;SACF;QAGD,IAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAC1C;YACI,IAAI,CAAC,+BAA+B,EAAE,CAAC;SAC1C;IACL,CAAC;IAEM,iEAA+B,GAAtC;QAAA,iBAeC;QAbG,IAAI,QAAQ,GAAQ,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,IAAI;YAEhC,IAAI,GAAG,GAAQ,EAAE,CAAC;YAClB,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAC3E,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAG,KAAI,CAAC,aAAa,CAAC,mBAAmB,IAAI,EAAE,EAC/C;gBACE,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;aACpE;YACD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;IAChF,CAAC;IAEM,mEAAiC,GAAxC;QAAA,iBAeC;QAbG,IAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,IAAI,EAAE;YAC3C,OAAO,IAAI,CAAC;QAEhB,IAAI,MAAM,GAAa,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,iBAAO;YACpC,IAAG,CAAC,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,IAAI,EACvK;gBACI,MAAM,GAAG,KAAK,CAAC;gBACf,OAAO;aACV;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAClB,CAAC;IA5IQ;QAAR,2DAAK,EAAE;;kEAAmB;IALlB,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,yIAA8C;;SAE/C,CAAC;+EASoC,kFAAmB;YACzB,6FAAqB;OARxC,uBAAuB,CAkJnC;IAAD,8BAAC;CAAA;AAlJmC;AAoJpC;IAAA;IAMA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;ACrKD,8CAA8C,kBAAkB,EAAE,2BAA2B,mBAAmB,qBAAqB,0BAA0B,sBAAsB,EAAE,yBAAyB,2BAA2B,4BAA4B,uBAAuB,yBAAyB,yBAAyB,wCAAwC,EAAE,kCAAkC,6CAA6C,EAAE,gCAAgC,6CAA6C,EAAE,+BAA+B,0CAA0C,uBAAuB,4BAA4B,wBAAwB,iBAAiB,4BAA4B,EAAE,EAAE,+CAA+C,27D;;;;;;;;;;;ACA9wB,+FAA+F,oEAAoE,WAAW,wBAAwB,0UAA0U,KAAK,wBAAwB,+EAA+E,2BAA2B,wBAAwB,wDAAwD,8BAA8B,uBAAuB,KAAK,0BAA0B,gD;;;;;;;;;;;;;;;;;;;;;;;ACAhvB;AAClB;AAEuB;AAEN;AACF;AACmB;AACZ;AAQ/E;IAQI,mCACU,MAAa,EACb,oBAA0C,EAC1C,mBAA8D;QAF9D,WAAM,GAAN,MAAM,CAAO;QACb,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAA2C;QAEtE,IAAI,CAAC,eAAe,GAAG,wCAAwC,CAAC;IAClE,CAAC;IAED,4CAAQ,GAAR;QAEE,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,EACxE;YACI,IAAI,GAAG,GAAW,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC9C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,EAAC,SAAS,CAAC,CAAC;YACzC,GAAG,GAAG,qCAAqC,GAAG,GAAG,CAAC;YAClD,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,GAAG,CAAC;SACrC;aACI,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,EAC5C;YACE,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;SACpD;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,qFAAe,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;QAC9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,sGAAyB,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC7G,CAAC;IAED,sDAAkB,GAAlB;QAEI,sDAAsD;QAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9H,CAAC;IAtCQ;QAAR,2DAAK,EAAE;wEAAmB,uFAAgB;uEAAC;IAIN;QAArC,+DAAS,CAAC,sGAAyB,CAAC;wEAAmB,sGAAyB;uEAAC;IANzE,yBAAyB;QANrC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,+IAAgD;;SAEjD,CAAC;+EAWmB,sDAAM;YACS,4FAAoB;YACpB,6FAAqB;OAX5C,yBAAyB,CAyCrC;IAAD,gCAAC;CAAA;AAzCqC;;;;;;;;;;;;AChBtC,8CAA8C,kBAAkB,EAAE,gBAAgB,mBAAmB,qBAAqB,0BAA0B,sBAAsB,EAAE,uBAAuB,uBAAuB,qBAAqB,uBAAuB,oBAAoB,EAAE,wBAAwB,uBAAuB,qBAAqB,uBAAuB,oBAAoB,EAAE,2BAA2B,uBAAuB,qBAAqB,uBAAuB,oBAAoB,EAAE,kCAAkC,6CAA6C,EAAE,+CAA+C,mrD;;;;;;;;;;;ACAjoB,8FAA8F,gDAAgD,WAAW,oDAAoD,gDAAgD,sB;;;;;;;;;;;ACA7P,8BAA8B,0BAA0B,oBAAoB,mBAAmB,eAAe,cAAc,uBAAuB,2CAA2C,EAAE,WAAW,mBAAmB,EAAE,+CAA+C,m3B;;;;;;;;;;;;;;;;;;;;ACAhM;AACT;AACO;AAEC;AAO9E;IAIE,mCACU,oBAA0C,EAC1C,mBAA8D;QAD9D,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAA2C;QALxE,YAAO,GAAG,EAAE,CAAC;QACL,sBAAiB,GAAoB,IAAI,8EAAe,EAAE,CAAC;IAKjE,CAAC;IAEH,4CAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;QACvE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,mBAAS;YAElF,IAAI,gBAAgB,GAAqB,SAAS,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,yDAAqB,GAArB;QAAA,iBAcC;QAZC,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1C,IAAI,YAAY,GAAsB,EAAE,CAAC;QACzC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC;QAEpF,IAAG,YAAY,IAAI,IAAI,EACvB;YACE,OAAO;SACR;QAED,IAAI,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAI,KAAI,CAAC,iBAAiB,CAAC,SAAS,IAAI,CAAC,CAAC,WAAW,IAAI,KAAI,CAAC,iBAAiB,CAAC,WAAW,EAAtG,CAAsG,CAAC,CAAC;QAC9I,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,YAAY,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACtC,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAmBC;QAjBG,IAAI,YAAY,GAAsB,EAAE,CAAC;QACzC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC;QAEpF,IAAG,YAAY,IAAI,IAAI;YACnB,YAAY,GAAG,EAAE;QAErB,IAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EACpC;YACI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC7C;aAED;YACE,IAAI,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,WAAC,IAAE,QAAC,CAAC,SAAS,IAAI,KAAI,CAAC,iBAAiB,CAAC,SAAS,IAAI,CAAC,CAAC,WAAW,IAAI,KAAI,CAAC,iBAAiB,CAAC,WAAW,EAAtG,CAAsG,CAAC,CAAC;YAC9I,IAAG,KAAK,IAAI,CAAC,CAAC;gBACV,YAAY,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC;IACvF,CAAC;IAxDO;QAAP,2DAAK,EAAE;wEAAmB,8EAAe;wEAAyB;IAFxD,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,+IAAgD;;SAEjD,CAAC;+EAMgC,qFAAoB;YACpB,sFAAqB;OAN1C,yBAAyB,CA2DrC;IAAD,gCAAC;CAAA;AA3DqC;;;;;;;;;;;;ACXtC,2KAA2K,8CAA8C,gDAAgD,8CAA8C,oCAAoC,OAAO,qLAAqL,iIAAiI,iBAAiB,mDAAmD,+BAA+B,uGAAuG,aAAa,gM;;;;;;;;;;;;;;;;;;ACAlxB;AACpC;AA0CzD;IAcE;QAZA,SAAI,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACxC,YAAO,GAAG,IAAI,0DAAY,CAAC;QAC7B,kBAAa,GAAQ,EAAE,CAAC;IAUlB,CAAC;IANf,wCAAQ,GAAR;QAEE,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IAID,0CAAU,GAAV,UAAW,KAAK;QAEf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAC9C,CAAC;IAhBS;QAAT,4DAAM,EAAE;;0DAA4B;IAC7B;QAAP,2DAAK,EAAE;;gEAAwB;IAJrB,qBAAqB;QAxCjC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,mIAA4C;;SAqC7C,CAAC;;OACW,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;AC3ClC,whCAAwhC,yFAAyF,6CAA6C,oKAAoK,eAAe,6IAA6I,eAAe,GAAG,yFAAyF,2O;;;;;;;;;;;;;;;;;;;;;;;;ACAjhD;AAEmC;AACd;AAEO;AACN;AACT;AAGU;AACd;AASjE;IAiBE,yBAAoB,OAA6B,EACvC,aAA0C,EAC1C,gCAAkF,EAClF,WAAwB,EACxB,MAAc;QAJJ,YAAO,GAAP,OAAO,CAAsB;QACvC,kBAAa,GAAb,aAAa,CAA6B;QAC1C,qCAAgC,GAAhC,gCAAgC,CAAkD;QAClF,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAfxB,eAAU,GAAG,6EAAkB,CAAC;QAShC,YAAO,GAAQ,EAAE,CAAC;IAOb,CAAC;IAEN,kCAAQ,GAAR;QAEM,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAEM,oCAAU,GAAjB,UAAkB,SAAiB;QAAnC,iBAoBC;QAlBK,IAAG,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,IAAI,EAAE,IAAI,SAAS,CAAC,MAAM,GAAG,EAAE;YAC1E,OAAO;QAEX,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,mBAAS;YAErG,IAAI,gBAAgB,GAAkB,SAAS,CAAC;YAChD,IAAG,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,CAAC,OAAO,EACvD;gBACI,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;aAC1C;iBACG;gBACA,KAAI,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,IAAI,EAAC,SAAS,EAAE,OAAO,EAAE,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,CAAC;aACzF;QACL,CAAC,EACD,eAAK;YAED,KAAI,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,OAAO,EAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACT,CAAC;IAEM,mCAAS,GAAhB;QAAA,iBAgBC;QAdC,IAAM,OAAO,GACb;YACI,OAAO,EAAE,EAAE;YACX,eAAe,EAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;YACtD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;YAC3C,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;YACxC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM;SACnD,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,SAAS;YAE3C,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC,EACD,UAAC,KAAK,IAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAEM,wCAAc,GAArB;QAAA,iBAiBC;QAfC,IAAM,OAAO,GACb;YACI,OAAO,EAAE,EAAE;YACX,kBAAkB,EAAE,EAAE;YACtB,UAAU,EAAE,CAAC;SAChB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAEjD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EACpC;gBACM,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACjC;QACH,CAAC,EACD,UAAC,KAAK,IAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAEM,yCAAe,GAAtB,UAAuB,SAAyB;QAE5C,IAAG,SAAS,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,OAAO,EACtD;YACI,IAAI,0BAA0B,GAA8B,EAAE;YAC9D,IAAI,gCAAgC,GAAqD,IAAI,sFAAqB,EAA4B,CAAC;YAC/I,IAAI,kBAAkB,GAAY,SAAS,CAAC,WAAW,CAAC;YACxD,IAAI,YAAY,GAAY,SAAS,CAAC,KAAK,CAAC;YAE5C,0BAA0B,GAAG,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,kBAAkB,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC;YACtJ,IAAG,CAAC,0BAA0B,IAAI,0BAA0B,IAAI,IAAI;gBAChE,0BAA0B,GAAG,EAAE,CAAC;YAEpC,IAAI,sBAAsB,GAAG,IAAI,4FAAsB,EAAE,CAAC;YAC1D,sBAAsB,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC;YAEpD,0BAA0B,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACxD,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,kBAAkB,GAAG,GAAG,GAAG,YAAY,EAAE,0BAA0B,CAAC,CAAC;SACxJ;IACL,CAAC;IAEM,oCAAU,GAAjB;QAAA,iBAMC;QAJC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAExB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,EAAC,IAAI,CAAC,CAAC;IACV,CAAC;IAEM,oCAAU,GAAjB;QACE,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAEM,4CAAkB,GAAzB;QAAA,iBA0BC;QAxBG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAG,CAAC,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,0BAA0B,IAAI,IAAI;YAC1E,IAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;QAEzC,IAAI,eAAe,GAAI,IAAI,CAAC,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/J,IAAG,eAAe,IAAI,eAAe,IAAI,IAAI,EAC7C;YAEI,eAAe,CAAC,OAAO,CAAC,eAAK;gBAEzB,IAAI,SAAS,GAAG,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAA1B,CAA0B,CAAC,CAAC;gBACpF,IAAG,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,EAClC;oBAEI,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC/C;YACL,CAAC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;IAItB,CAAC;IAEM,wCAAc,GAArB,UAAsB,SAAe;QAEjC,IAAI,eAAe,GAAI,IAAI,CAAC,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/J,IAAI,eAAe,GAAG,eAAe,CAAC,SAAS,CAAC,WAAC,IAAE,QAAC,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,EAA9B,CAA8B,CAAC,CAAC;QACnF,IAAG,eAAe,IAAI,CAAC,CAAC,EACxB;YACI,eAAe,CAAC,MAAM,CAAC,eAAe,EAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,gCAAgC,CAAC,cAAc,CAAC,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;SAC5J;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,WAAC,IAAE,QAAC,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,EAA9B,CAA8B,CAAC,CAAC;QAC5F,IAAG,QAAQ,IAAI,CAAC,CAAC,EACjB;YACI,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;SACtD;IACL,CAAC;IAnKQ;QAAR,2DAAK,EAAE;;uDAAqB;IACpB;QAAR,2DAAK,EAAE;;yDAAuB;IACtB;QAAR,2DAAK,EAAE;;+DAA6B;IAJ1B,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,sHAAsC;;SAEvC,CAAC;+EAmB4B,uFAAqB;YACxB,mGAA2B;YACP,sFAAqB;YAC3C,0EAAW;YAChB,+DAAM;OArBb,eAAe,CAsK3B;IAAD,sBAAC;CAAA;AAtK2B;;;;;;;;;;;;ACpB5B,iCAAiC,+BAA+B,EAAE,mBAAmB,2BAA2B,EAAE,mFAAmF,6BAA6B,EAAE,iBAAiB,gBAAgB,iBAAiB,gCAAgC,2BAA2B,EAAE,yBAAyB,uBAAuB,oBAAoB,kBAAkB,4BAA4B,iBAAiB,mBAAmB,iBAAiB,0BAA0B,qBAAqB,0BAA0B,mBAAmB,EAAE,2DAA2D,0BAA0B,mBAAmB,EAAE,+CAA+C,mvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCxsB;AACc;AACR;AACmB;AACN;AACK;AACd;AACP;AACkC;AACM;AACM;AAClB;AACkB;AAC1F,+DAA+D;AAC/D,wDAAwD;AAmCxD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAjC5B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAe;gBACf,6EAAe;gBACf,0FAAqB;gBACrB,iGAAuB;gBACvB,uGAAyB;gBACzB,qFAAmB;gBACnB,uGAAyB;aAC1B;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,oEAAS;gBACT,gEAAgB;gBAChB,yDAAW;gBACX,kEAAmB;aAGpB;YACD,OAAO,EAAE;gBACP,wEAAe;gBACf,6EAAe;gBACf,0FAAqB;gBACrB,iGAAuB;gBACvB,uGAAyB;gBACzB,qFAAmB;gBACnB,uGAAyB;aAC1B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,6EAAe,EAAE,iGAAuB,EAAE,uGAAyB,CAAC;SACjF,CAAC;OAEW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ","file":"default~VistaServicio-VistaServicio-module~authentication-authentication-module~integracion-integrac~1592fd29.js","sourcesContent":["/**\r\n * @license Angular v7.2.11\r\n * (c) 2010-2019 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\nimport { __decorate, __metadata, __spread, __extends, __read } from 'tslib';\r\nimport { Injectable, NgModule, Version } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ɵgetDOM } from '@angular/platform-browser';\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A backend for http that uses the `XMLHttpRequest` browser API.\r\n *\r\n * Take care not to evaluate this in non-browser contexts.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar BrowserXhr = /** @class */ (function () {\r\n    function BrowserXhr() {\r\n    }\r\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\r\n    BrowserXhr = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], BrowserXhr);\r\n    return BrowserXhr;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Supported http methods.\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar RequestMethod;\r\n(function (RequestMethod) {\r\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\r\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\r\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\r\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\r\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\r\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\r\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\r\n})(RequestMethod || (RequestMethod = {}));\r\n/**\r\n * All possible states in which a connection can be, based on\r\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\r\n * additional \"CANCELLED\" state.\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar ReadyState;\r\n(function (ReadyState) {\r\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\r\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\r\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\r\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\r\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\r\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\r\n})(ReadyState || (ReadyState = {}));\r\n/**\r\n * Acceptable response types to be associated with a {@link Response}, based on\r\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar ResponseType;\r\n(function (ResponseType) {\r\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\r\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\r\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\r\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\r\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\r\n})(ResponseType || (ResponseType = {}));\r\n/**\r\n * Supported content type to be automatically associated with a {@link Request}.\r\n * @deprecated see https://angular.io/guide/http\r\n */\r\nvar ContentType;\r\n(function (ContentType) {\r\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\r\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\r\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\r\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\r\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\r\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\r\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\r\n})(ContentType || (ContentType = {}));\r\n/**\r\n * Define which buffer to use to store the response\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar ResponseContentType;\r\n(function (ResponseContentType) {\r\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\r\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\r\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\r\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\r\n})(ResponseContentType || (ResponseContentType = {}));\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\r\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\r\n *\r\n * The only known difference between this `Headers` implementation and the spec is the\r\n * lack of an `entries` method.\r\n *\r\n * @usageNotes\r\n * ### Example\r\n *\r\n * ```\r\n * import {Headers} from '@angular/http';\r\n *\r\n * var firstHeaders = new Headers();\r\n * firstHeaders.append('Content-Type', 'image/jpeg');\r\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\r\n *\r\n * // Create headers from Plain Old JavaScript Object\r\n * var secondHeaders = new Headers({\r\n *   'X-My-Custom-Header': 'Angular'\r\n * });\r\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\r\n *\r\n * var thirdHeaders = new Headers(secondHeaders);\r\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar Headers = /** @class */ (function () {\r\n    // TODO(vicb): any -> string|string[]\r\n    function Headers(headers) {\r\n        var _this = this;\r\n        /** @internal header names are lower case */\r\n        this._headers = new Map();\r\n        /** @internal map lower case names to actual names */\r\n        this._normalizedNames = new Map();\r\n        if (!headers) {\r\n            return;\r\n        }\r\n        if (headers instanceof Headers) {\r\n            headers.forEach(function (values, name) {\r\n                values.forEach(function (value) { return _this.append(name, value); });\r\n            });\r\n            return;\r\n        }\r\n        Object.keys(headers).forEach(function (name) {\r\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\r\n            _this.delete(name);\r\n            values.forEach(function (value) { return _this.append(name, value); });\r\n        });\r\n    }\r\n    /**\r\n     * Returns a new Headers instance from the given DOMString of Response Headers\r\n     */\r\n    Headers.fromResponseHeaderString = function (headersString) {\r\n        var headers = new Headers();\r\n        headersString.split('\\n').forEach(function (line) {\r\n            var index = line.indexOf(':');\r\n            if (index > 0) {\r\n                var name_1 = line.slice(0, index);\r\n                var value = line.slice(index + 1).trim();\r\n                headers.set(name_1, value);\r\n            }\r\n        });\r\n        return headers;\r\n    };\r\n    /**\r\n     * Appends a header to existing list of header values for a given header name.\r\n     */\r\n    Headers.prototype.append = function (name, value) {\r\n        var values = this.getAll(name);\r\n        if (values === null) {\r\n            this.set(name, value);\r\n        }\r\n        else {\r\n            values.push(value);\r\n        }\r\n    };\r\n    /**\r\n     * Deletes all header values for the given name.\r\n     */\r\n    Headers.prototype.delete = function (name) {\r\n        var lcName = name.toLowerCase();\r\n        this._normalizedNames.delete(lcName);\r\n        this._headers.delete(lcName);\r\n    };\r\n    Headers.prototype.forEach = function (fn) {\r\n        var _this = this;\r\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\r\n    };\r\n    /**\r\n     * Returns first header that matches given name.\r\n     */\r\n    Headers.prototype.get = function (name) {\r\n        var values = this.getAll(name);\r\n        if (values === null) {\r\n            return null;\r\n        }\r\n        return values.length > 0 ? values[0] : null;\r\n    };\r\n    /**\r\n     * Checks for existence of header by given name.\r\n     */\r\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\r\n    /**\r\n     * Returns the names of the headers\r\n     */\r\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\r\n    /**\r\n     * Sets or overrides header value for given name.\r\n     */\r\n    Headers.prototype.set = function (name, value) {\r\n        if (Array.isArray(value)) {\r\n            if (value.length) {\r\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\r\n            }\r\n        }\r\n        else {\r\n            this._headers.set(name.toLowerCase(), [value]);\r\n        }\r\n        this.mayBeSetNormalizedName(name);\r\n    };\r\n    /**\r\n     * Returns values of all headers.\r\n     */\r\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\r\n    /**\r\n     * Returns string of all headers.\r\n     */\r\n    // TODO(vicb): returns {[name: string]: string[]}\r\n    Headers.prototype.toJSON = function () {\r\n        var _this = this;\r\n        var serialized = {};\r\n        this._headers.forEach(function (values, name) {\r\n            var split = [];\r\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\r\n            serialized[_this._normalizedNames.get(name)] = split;\r\n        });\r\n        return serialized;\r\n    };\r\n    /**\r\n     * Returns list of header values for a given name.\r\n     */\r\n    Headers.prototype.getAll = function (name) {\r\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\r\n    };\r\n    /**\r\n     * This method is not implemented.\r\n     */\r\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\r\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\r\n        var lcName = name.toLowerCase();\r\n        if (!this._normalizedNames.has(lcName)) {\r\n            this._normalizedNames.set(lcName, name);\r\n        }\r\n    };\r\n    return Headers;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Creates a response options object to be optionally provided when instantiating a\r\n * {@link Response}.\r\n *\r\n * This class is based on the `ResponseInit` description in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\r\n *\r\n * All values are null by default. Typical defaults can be found in the\r\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\r\n *\r\n * This class may be used in tests to build {@link Response Responses} for\r\n * mock responses (see {@link MockBackend}).\r\n *\r\n * @usageNotes\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {ResponseOptions, Response} from '@angular/http';\r\n *\r\n * var options = new ResponseOptions({\r\n *   body: '{\"name\":\"Jeff\"}'\r\n * });\r\n * var res = new Response(options);\r\n *\r\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar ResponseOptions = /** @class */ (function () {\r\n    function ResponseOptions(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\r\n        this.body = body != null ? body : null;\r\n        this.status = status != null ? status : null;\r\n        this.headers = headers != null ? headers : null;\r\n        this.statusText = statusText != null ? statusText : null;\r\n        this.type = type != null ? type : null;\r\n        this.url = url != null ? url : null;\r\n    }\r\n    /**\r\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\r\n     * override\r\n     * existing values. This method will not change the values of the instance on which it is being\r\n     * called.\r\n     *\r\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\r\n     * where certain properties may change from test to test.\r\n     *\r\n     * @usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * import {ResponseOptions, Response} from '@angular/http';\r\n     *\r\n     * var options = new ResponseOptions({\r\n     *   body: {name: 'Jeff'}\r\n     * });\r\n     * var res = new Response(options.merge({\r\n     *   url: 'https://google.com'\r\n     * }));\r\n     * console.log('options.url:', options.url); // null\r\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\r\n     * console.log('res.url:', res.url); // https://google.com\r\n     * ```\r\n     */\r\n    ResponseOptions.prototype.merge = function (options) {\r\n        return new ResponseOptions({\r\n            body: options && options.body != null ? options.body : this.body,\r\n            status: options && options.status != null ? options.status : this.status,\r\n            headers: options && options.headers != null ? options.headers : this.headers,\r\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\r\n            type: options && options.type != null ? options.type : this.type,\r\n            url: options && options.url != null ? options.url : this.url,\r\n        });\r\n    };\r\n    return ResponseOptions;\r\n}());\r\n/**\r\n * Subclass of {@link ResponseOptions}, with default values.\r\n *\r\n * Default values:\r\n *  * status: 200\r\n *  * headers: empty {@link Headers} object\r\n *\r\n * This class could be extended and bound to the {@link ResponseOptions} class\r\n * when configuring an {@link Injector}, in order to override the default options\r\n * used by {@link Http} to create {@link Response Responses}.\r\n *\r\n * @usageNotes\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {provide} from '@angular/core';\r\n * import {bootstrap} from '@angular/platform-browser/browser';\r\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\r\n * '@angular/http';\r\n * import {App} from './myapp';\r\n *\r\n * class MyOptions extends BaseResponseOptions {\r\n *   headers:Headers = new Headers({network: 'github'});\r\n * }\r\n *\r\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\r\n * ```\r\n *\r\n * The options could also be extended when manually creating a {@link Response}\r\n * object.\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * import {BaseResponseOptions, Response} from '@angular/http';\r\n *\r\n * var options = new BaseResponseOptions();\r\n * var res = new Response(options.merge({\r\n *   body: 'Angular',\r\n *   headers: new Headers({framework: 'angular'})\r\n * }));\r\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\r\n * console.log('res.text():', res.text()); // Angular;\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar BaseResponseOptions = /** @class */ (function (_super) {\r\n    __extends(BaseResponseOptions, _super);\r\n    function BaseResponseOptions() {\r\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\r\n    }\r\n    BaseResponseOptions = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], BaseResponseOptions);\r\n    return BaseResponseOptions;\r\n}(ResponseOptions));\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Abstract class from which real backends are derived.\r\n *\r\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\r\n * {@link Request}.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar ConnectionBackend = /** @class */ (function () {\r\n    function ConnectionBackend() {\r\n    }\r\n    return ConnectionBackend;\r\n}());\r\n/**\r\n * Abstract class from which real connections are derived.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    function Connection() {\r\n    }\r\n    return Connection;\r\n}());\r\n/**\r\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar XSRFStrategy = /** @class */ (function () {\r\n    function XSRFStrategy() {\r\n    }\r\n    return XSRFStrategy;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction normalizeMethodName(method) {\r\n    if (typeof method !== 'string')\r\n        return method;\r\n    switch (method.toUpperCase()) {\r\n        case 'GET':\r\n            return RequestMethod.Get;\r\n        case 'POST':\r\n            return RequestMethod.Post;\r\n        case 'PUT':\r\n            return RequestMethod.Put;\r\n        case 'DELETE':\r\n            return RequestMethod.Delete;\r\n        case 'OPTIONS':\r\n            return RequestMethod.Options;\r\n        case 'HEAD':\r\n            return RequestMethod.Head;\r\n        case 'PATCH':\r\n            return RequestMethod.Patch;\r\n    }\r\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\r\n}\r\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\r\nfunction getResponseURL(xhr) {\r\n    if ('responseURL' in xhr) {\r\n        return xhr.responseURL;\r\n    }\r\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\r\n        return xhr.getResponseHeader('X-Request-URL');\r\n    }\r\n    return null;\r\n}\r\nfunction stringToArrayBuffer(input) {\r\n    var view = new Uint16Array(input.length);\r\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\r\n        view[i] = input.charCodeAt(i);\r\n    }\r\n    return view.buffer;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction paramParser(rawParams) {\r\n    if (rawParams === void 0) { rawParams = ''; }\r\n    var map = new Map();\r\n    if (rawParams.length > 0) {\r\n        var params = rawParams.split('&');\r\n        params.forEach(function (param) {\r\n            var eqIdx = param.indexOf('=');\r\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\r\n            var list = map.get(key) || [];\r\n            list.push(val);\r\n            map.set(key, list);\r\n        });\r\n    }\r\n    return map;\r\n}\r\n/**\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n **/\r\nvar QueryEncoder = /** @class */ (function () {\r\n    function QueryEncoder() {\r\n    }\r\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\r\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\r\n    return QueryEncoder;\r\n}());\r\nfunction standardEncoding(v) {\r\n    return encodeURIComponent(v)\r\n        .replace(/%40/gi, '@')\r\n        .replace(/%3A/gi, ':')\r\n        .replace(/%24/gi, '$')\r\n        .replace(/%2C/gi, ',')\r\n        .replace(/%3B/gi, ';')\r\n        .replace(/%2B/gi, '+')\r\n        .replace(/%3D/gi, '=')\r\n        .replace(/%3F/gi, '?')\r\n        .replace(/%2F/gi, '/');\r\n}\r\n/**\r\n * Map-like representation of url search parameters, based on\r\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\r\n * with several extensions for merging URLSearchParams objects:\r\n *   - setAll()\r\n *   - appendAll()\r\n *   - replaceAll()\r\n *\r\n * This class accepts an optional second parameter of ${@link QueryEncoder},\r\n * which is used to serialize parameters before making a request. By default,\r\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\r\n * and then un-encodes certain characters that are allowed to be part of the query\r\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\r\n *\r\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\r\n *\r\n * If the set of allowed query characters is not acceptable for a particular backend,\r\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\r\n *\r\n * ```\r\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\r\n * class MyQueryEncoder extends QueryEncoder {\r\n *   encodeKey(k: string): string {\r\n *     return myEncodingFunction(k);\r\n *   }\r\n *\r\n *   encodeValue(v: string): string {\r\n *     return myEncodingFunction(v);\r\n *   }\r\n * }\r\n *\r\n * let params = new URLSearchParams('', new MyQueryEncoder());\r\n * ```\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar URLSearchParams = /** @class */ (function () {\r\n    function URLSearchParams(rawParams, queryEncoder) {\r\n        if (rawParams === void 0) { rawParams = ''; }\r\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\r\n        this.rawParams = rawParams;\r\n        this.queryEncoder = queryEncoder;\r\n        this.paramsMap = paramParser(rawParams);\r\n    }\r\n    URLSearchParams.prototype.clone = function () {\r\n        var clone = new URLSearchParams('', this.queryEncoder);\r\n        clone.appendAll(this);\r\n        return clone;\r\n    };\r\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\r\n    URLSearchParams.prototype.get = function (param) {\r\n        var storedParam = this.paramsMap.get(param);\r\n        return Array.isArray(storedParam) ? storedParam[0] : null;\r\n    };\r\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\r\n    URLSearchParams.prototype.set = function (param, val) {\r\n        if (val === void 0 || val === null) {\r\n            this.delete(param);\r\n            return;\r\n        }\r\n        var list = this.paramsMap.get(param) || [];\r\n        list.length = 0;\r\n        list.push(val);\r\n        this.paramsMap.set(param, list);\r\n    };\r\n    // A merge operation\r\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\r\n    //\r\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\r\n    //\r\n    // TODO(@caitp): document this better\r\n    URLSearchParams.prototype.setAll = function (searchParams) {\r\n        var _this = this;\r\n        searchParams.paramsMap.forEach(function (value, param) {\r\n            var list = _this.paramsMap.get(param) || [];\r\n            list.length = 0;\r\n            list.push(value[0]);\r\n            _this.paramsMap.set(param, list);\r\n        });\r\n    };\r\n    URLSearchParams.prototype.append = function (param, val) {\r\n        if (val === void 0 || val === null)\r\n            return;\r\n        var list = this.paramsMap.get(param) || [];\r\n        list.push(val);\r\n        this.paramsMap.set(param, list);\r\n    };\r\n    // A merge operation\r\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\r\n    // for each value in `values`.\r\n    //\r\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\r\n    //\r\n    // TODO(@caitp): document this better\r\n    URLSearchParams.prototype.appendAll = function (searchParams) {\r\n        var _this = this;\r\n        searchParams.paramsMap.forEach(function (value, param) {\r\n            var list = _this.paramsMap.get(param) || [];\r\n            for (var i = 0; i < value.length; ++i) {\r\n                list.push(value[i]);\r\n            }\r\n            _this.paramsMap.set(param, list);\r\n        });\r\n    };\r\n    // A merge operation\r\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\r\n    // followed by `set(name, values)`\r\n    //\r\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\r\n    //\r\n    // TODO(@caitp): document this better\r\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\r\n        var _this = this;\r\n        searchParams.paramsMap.forEach(function (value, param) {\r\n            var list = _this.paramsMap.get(param) || [];\r\n            list.length = 0;\r\n            for (var i = 0; i < value.length; ++i) {\r\n                list.push(value[i]);\r\n            }\r\n            _this.paramsMap.set(param, list);\r\n        });\r\n    };\r\n    URLSearchParams.prototype.toString = function () {\r\n        var _this = this;\r\n        var paramsList = [];\r\n        this.paramsMap.forEach(function (values, k) {\r\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\r\n        });\r\n        return paramsList.join('&');\r\n    };\r\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\r\n    return URLSearchParams;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * HTTP request body used by both {@link Request} and {@link Response}\r\n * https://fetch.spec.whatwg.org/#body\r\n */\r\nvar Body = /** @class */ (function () {\r\n    function Body() {\r\n    }\r\n    /**\r\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\r\n     */\r\n    Body.prototype.json = function () {\r\n        if (typeof this._body === 'string') {\r\n            return JSON.parse(this._body);\r\n        }\r\n        if (this._body instanceof ArrayBuffer) {\r\n            return JSON.parse(this.text());\r\n        }\r\n        return this._body;\r\n    };\r\n    /**\r\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\r\n     *\r\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\r\n     * bytes in the buffer will be interpreted. Valid values are:\r\n     *\r\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\r\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\r\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\r\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\r\n     *   considered deprecated.\r\n     *\r\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\r\n     */\r\n    Body.prototype.text = function (encodingHint) {\r\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\r\n        if (this._body instanceof URLSearchParams) {\r\n            return this._body.toString();\r\n        }\r\n        if (this._body instanceof ArrayBuffer) {\r\n            switch (encodingHint) {\r\n                case 'legacy':\r\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\r\n                case 'iso-8859':\r\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\r\n                default:\r\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\r\n            }\r\n        }\r\n        if (this._body == null) {\r\n            return '';\r\n        }\r\n        if (typeof this._body === 'object') {\r\n            return JSON.stringify(this._body, null, 2);\r\n        }\r\n        return this._body.toString();\r\n    };\r\n    /**\r\n     * Return the body as an ArrayBuffer\r\n     */\r\n    Body.prototype.arrayBuffer = function () {\r\n        if (this._body instanceof ArrayBuffer) {\r\n            return this._body;\r\n        }\r\n        return stringToArrayBuffer(this.text());\r\n    };\r\n    /**\r\n      * Returns the request's body as a Blob, assuming that body exists.\r\n      */\r\n    Body.prototype.blob = function () {\r\n        if (this._body instanceof Blob) {\r\n            return this._body;\r\n        }\r\n        if (this._body instanceof ArrayBuffer) {\r\n            return new Blob([this._body]);\r\n        }\r\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\r\n    };\r\n    return Body;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Creates `Response` instances from provided values.\r\n *\r\n * Though this object isn't\r\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\r\n * add data to a view.\r\n *\r\n * @usageNotes\r\n * ### Example\r\n *\r\n * ```\r\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\r\n * ```\r\n *\r\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\r\n * can be accessed many times. There are other differences in the implementation, but this is the\r\n * most significant.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar Response = /** @class */ (function (_super) {\r\n    __extends(Response, _super);\r\n    function Response(responseOptions) {\r\n        var _this = _super.call(this) || this;\r\n        _this._body = responseOptions.body;\r\n        _this.status = responseOptions.status;\r\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\r\n        _this.statusText = responseOptions.statusText;\r\n        _this.headers = responseOptions.headers;\r\n        _this.type = responseOptions.type;\r\n        _this.url = responseOptions.url;\r\n        return _this;\r\n    }\r\n    Response.prototype.toString = function () {\r\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\r\n    };\r\n    return Response;\r\n}(Body));\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nvar _nextRequestId = 0;\r\nvar JSONP_HOME = '__ng_jsonp__';\r\nvar _jsonpConnections = null;\r\nfunction _getJsonpConnections() {\r\n    var w = typeof window == 'object' ? window : {};\r\n    if (_jsonpConnections === null) {\r\n        _jsonpConnections = w[JSONP_HOME] = {};\r\n    }\r\n    return _jsonpConnections;\r\n}\r\n// Make sure not to evaluate this in a non-browser environment!\r\nvar BrowserJsonp = /** @class */ (function () {\r\n    function BrowserJsonp() {\r\n    }\r\n    // Construct a <script> element with the specified URL\r\n    BrowserJsonp.prototype.build = function (url) {\r\n        var node = document.createElement('script');\r\n        node.src = url;\r\n        return node;\r\n    };\r\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\r\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\r\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\r\n        var connections = _getJsonpConnections();\r\n        connections[id] = connection;\r\n    };\r\n    BrowserJsonp.prototype.removeConnection = function (id) {\r\n        var connections = _getJsonpConnections();\r\n        connections[id] = null;\r\n    };\r\n    // Attach the <script> element to the DOM\r\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\r\n    // Remove <script> element from the DOM\r\n    BrowserJsonp.prototype.cleanup = function (node) {\r\n        if (node.parentNode) {\r\n            node.parentNode.removeChild((node));\r\n        }\r\n    };\r\n    BrowserJsonp = __decorate([\r\n        Injectable()\r\n    ], BrowserJsonp);\r\n    return BrowserJsonp;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\r\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\r\n/**\r\n * Base class for an in-flight JSONP request.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar JSONPConnection = /** @class */ (function () {\r\n    /** @internal */\r\n    function JSONPConnection(req, _dom, baseResponseOptions) {\r\n        var _this = this;\r\n        this._dom = _dom;\r\n        this.baseResponseOptions = baseResponseOptions;\r\n        this._finished = false;\r\n        if (req.method !== RequestMethod.Get) {\r\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\r\n        }\r\n        this.request = req;\r\n        this.response = new Observable(function (responseObserver) {\r\n            _this.readyState = ReadyState.Loading;\r\n            var id = _this._id = _dom.nextRequestID();\r\n            _dom.exposeConnection(id, _this);\r\n            // Workaround Dart\r\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\r\n            var callback = _dom.requestCallback(_this._id);\r\n            var url = req.url;\r\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\r\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\r\n            }\r\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\r\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\r\n            }\r\n            var script = _this._script = _dom.build(url);\r\n            var onLoad = function (event) {\r\n                if (_this.readyState === ReadyState.Cancelled)\r\n                    return;\r\n                _this.readyState = ReadyState.Done;\r\n                _dom.cleanup(script);\r\n                if (!_this._finished) {\r\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\r\n                    if (baseResponseOptions) {\r\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\r\n                    }\r\n                    responseObserver.error(new Response(responseOptions_1));\r\n                    return;\r\n                }\r\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\r\n                if (_this.baseResponseOptions) {\r\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\r\n                }\r\n                responseObserver.next(new Response(responseOptions));\r\n                responseObserver.complete();\r\n            };\r\n            var onError = function (error) {\r\n                if (_this.readyState === ReadyState.Cancelled)\r\n                    return;\r\n                _this.readyState = ReadyState.Done;\r\n                _dom.cleanup(script);\r\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\r\n                if (baseResponseOptions) {\r\n                    responseOptions = baseResponseOptions.merge(responseOptions);\r\n                }\r\n                responseObserver.error(new Response(responseOptions));\r\n            };\r\n            script.addEventListener('load', onLoad);\r\n            script.addEventListener('error', onError);\r\n            _dom.send(script);\r\n            return function () {\r\n                _this.readyState = ReadyState.Cancelled;\r\n                script.removeEventListener('load', onLoad);\r\n                script.removeEventListener('error', onError);\r\n                _this._dom.cleanup(script);\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Callback called when the JSONP request completes, to notify the application\r\n     * of the new data.\r\n     */\r\n    JSONPConnection.prototype.finished = function (data) {\r\n        // Don't leak connections\r\n        this._finished = true;\r\n        this._dom.removeConnection(this._id);\r\n        if (this.readyState === ReadyState.Cancelled)\r\n            return;\r\n        this._responseData = data;\r\n    };\r\n    return JSONPConnection;\r\n}());\r\n/**\r\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar JSONPBackend = /** @class */ (function (_super) {\r\n    __extends(JSONPBackend, _super);\r\n    /** @internal */\r\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\r\n        var _this = _super.call(this) || this;\r\n        _this._browserJSONP = _browserJSONP;\r\n        _this._baseResponseOptions = _baseResponseOptions;\r\n        return _this;\r\n    }\r\n    JSONPBackend.prototype.createConnection = function (request) {\r\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\r\n    };\r\n    JSONPBackend = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\r\n    ], JSONPBackend);\r\n    return JSONPBackend;\r\n}(ConnectionBackend));\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\r\n/**\r\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\r\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\r\n * request.\r\n *\r\n * This class would typically not be created or interacted with directly inside applications, though\r\n * the {@link MockConnection} may be interacted with in tests.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar XHRConnection = /** @class */ (function () {\r\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\r\n        var _this = this;\r\n        this.request = req;\r\n        this.response = new Observable(function (responseObserver) {\r\n            var _xhr = browserXHR.build();\r\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\r\n            if (req.withCredentials != null) {\r\n                _xhr.withCredentials = req.withCredentials;\r\n            }\r\n            // load event handler\r\n            var onLoad = function () {\r\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\r\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\r\n                var body = null;\r\n                // HTTP 204 means no content\r\n                if (status !== 204) {\r\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\r\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\r\n                    // (supported by IE10)\r\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\r\n                    // Implicitly strip a potential XSSI prefix.\r\n                    if (typeof body === 'string') {\r\n                        body = body.replace(XSSI_PREFIX, '');\r\n                    }\r\n                }\r\n                // fix status code when it is 0 (0 status is undocumented).\r\n                // Occurs when accessing file resources or on Android 4.1 stock browser\r\n                // while retrieving files from application cache.\r\n                if (status === 0) {\r\n                    status = body ? 200 : 0;\r\n                }\r\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\r\n                // IE 9 does not provide the way to get URL of response\r\n                var url = getResponseURL(_xhr) || req.url;\r\n                var statusText = _xhr.statusText || 'OK';\r\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\r\n                if (baseResponseOptions != null) {\r\n                    responseOptions = baseResponseOptions.merge(responseOptions);\r\n                }\r\n                var response = new Response(responseOptions);\r\n                response.ok = isSuccess(status);\r\n                if (response.ok) {\r\n                    responseObserver.next(response);\r\n                    // TODO(gdi2290): defer complete if array buffer until done\r\n                    responseObserver.complete();\r\n                    return;\r\n                }\r\n                responseObserver.error(response);\r\n            };\r\n            // error event handler\r\n            var onError = function (err) {\r\n                var responseOptions = new ResponseOptions({\r\n                    body: err,\r\n                    type: ResponseType.Error,\r\n                    status: _xhr.status,\r\n                    statusText: _xhr.statusText,\r\n                });\r\n                if (baseResponseOptions != null) {\r\n                    responseOptions = baseResponseOptions.merge(responseOptions);\r\n                }\r\n                responseObserver.error(new Response(responseOptions));\r\n            };\r\n            _this.setDetectedContentType(req, _xhr);\r\n            if (req.headers == null) {\r\n                req.headers = new Headers();\r\n            }\r\n            if (!req.headers.has('Accept')) {\r\n                req.headers.append('Accept', 'application/json, text/plain, */*');\r\n            }\r\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\r\n            // Select the correct buffer type to store the response\r\n            if (req.responseType != null && _xhr.responseType != null) {\r\n                switch (req.responseType) {\r\n                    case ResponseContentType.ArrayBuffer:\r\n                        _xhr.responseType = 'arraybuffer';\r\n                        break;\r\n                    case ResponseContentType.Json:\r\n                        _xhr.responseType = 'json';\r\n                        break;\r\n                    case ResponseContentType.Text:\r\n                        _xhr.responseType = 'text';\r\n                        break;\r\n                    case ResponseContentType.Blob:\r\n                        _xhr.responseType = 'blob';\r\n                        break;\r\n                    default:\r\n                        throw new Error('The selected responseType is not supported');\r\n                }\r\n            }\r\n            _xhr.addEventListener('load', onLoad);\r\n            _xhr.addEventListener('error', onError);\r\n            _xhr.send(_this.request.getBody());\r\n            return function () {\r\n                _xhr.removeEventListener('load', onLoad);\r\n                _xhr.removeEventListener('error', onError);\r\n                _xhr.abort();\r\n            };\r\n        });\r\n    }\r\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\r\n        // Skip if a custom Content-Type header is provided\r\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\r\n            return;\r\n        }\r\n        // Set the detected content type\r\n        switch (req.contentType) {\r\n            case ContentType.NONE:\r\n                break;\r\n            case ContentType.JSON:\r\n                _xhr.setRequestHeader('content-type', 'application/json');\r\n                break;\r\n            case ContentType.FORM:\r\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\r\n                break;\r\n            case ContentType.TEXT:\r\n                _xhr.setRequestHeader('content-type', 'text/plain');\r\n                break;\r\n            case ContentType.BLOB:\r\n                var blob = req.blob();\r\n                if (blob.type) {\r\n                    _xhr.setRequestHeader('content-type', blob.type);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    return XHRConnection;\r\n}());\r\n/**\r\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\r\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\r\n * for more information on XSRF.\r\n *\r\n * Applications can configure custom cookie and header names by binding an instance of this class\r\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\r\n * details.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar CookieXSRFStrategy = /** @class */ (function () {\r\n    function CookieXSRFStrategy(_cookieName, _headerName) {\r\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\r\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\r\n        this._cookieName = _cookieName;\r\n        this._headerName = _headerName;\r\n    }\r\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\r\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\r\n        if (xsrfToken) {\r\n            req.headers.set(this._headerName, xsrfToken);\r\n        }\r\n    };\r\n    return CookieXSRFStrategy;\r\n}());\r\n/**\r\n * Creates {@link XHRConnection} instances.\r\n *\r\n * This class would typically not be used by end users, but could be\r\n * overridden if a different backend implementation should be used,\r\n * such as in a node backend.\r\n *\r\n * @usageNotes\r\n * ### Example\r\n *\r\n * ```\r\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\r\n * @Component({\r\n *   viewProviders: [\r\n *     HTTP_PROVIDERS,\r\n *     {provide: Http, useFactory: (backend, options) => {\r\n *       return new Http(backend, options);\r\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\r\n * })\r\n * class MyComponent {\r\n *   constructor(http:Http) {\r\n *     http.request('people.json').subscribe(res => this.people = res.json());\r\n *   }\r\n * }\r\n * ```\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar XHRBackend = /** @class */ (function () {\r\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\r\n        this._browserXHR = _browserXHR;\r\n        this._baseResponseOptions = _baseResponseOptions;\r\n        this._xsrfStrategy = _xsrfStrategy;\r\n    }\r\n    XHRBackend.prototype.createConnection = function (request) {\r\n        this._xsrfStrategy.configureRequest(request);\r\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\r\n    };\r\n    XHRBackend = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\r\n            XSRFStrategy])\r\n    ], XHRBackend);\r\n    return XHRBackend;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Creates a request options object to be optionally provided when instantiating a\r\n * {@link Request}.\r\n *\r\n * This class is based on the `RequestInit` description in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\r\n *\r\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\r\n * class, which sub-classes `RequestOptions`.\r\n *\r\n * ```typescript\r\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\r\n *\r\n * const options = new RequestOptions({\r\n *   method: RequestMethod.Post,\r\n *   url: 'https://google.com'\r\n * });\r\n * const req = new Request(options);\r\n * console.log('req.method:', RequestMethod[req.method]); // Post\r\n * console.log('options.url:', options.url); // https://google.com\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar RequestOptions = /** @class */ (function () {\r\n    // TODO(Dzmitry): remove search when this.search is removed\r\n    function RequestOptions(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\r\n        this.method = method != null ? normalizeMethodName(method) : null;\r\n        this.headers = headers != null ? headers : null;\r\n        this.body = body != null ? body : null;\r\n        this.url = url != null ? url : null;\r\n        this.params = this._mergeSearchParams(params || search);\r\n        this.withCredentials = withCredentials != null ? withCredentials : null;\r\n        this.responseType = responseType != null ? responseType : null;\r\n    }\r\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\r\n        /**\r\n         * @deprecated from 4.0.0. Use params instead.\r\n         */\r\n        get: function () { return this.params; },\r\n        /**\r\n         * @deprecated from 4.0.0. Use params instead.\r\n         */\r\n        set: function (params) { this.params = params; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\r\n     * existing values. This method will not change the values of the instance on which it is being\r\n     * called.\r\n     *\r\n     * Note that `headers` and `search` will override existing values completely if present in\r\n     * the `options` object. If these values should be merged, it should be done prior to calling\r\n     * `merge` on the `RequestOptions` instance.\r\n     *\r\n     * ```typescript\r\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\r\n     *\r\n     * const options = new RequestOptions({\r\n     *   method: RequestMethod.Post\r\n     * });\r\n     * const req = new Request(options.merge({\r\n     *   url: 'https://google.com'\r\n     * }));\r\n     * console.log('req.method:', RequestMethod[req.method]); // Post\r\n     * console.log('options.url:', options.url); // null\r\n     * console.log('req.url:', req.url); // https://google.com\r\n     * ```\r\n     */\r\n    RequestOptions.prototype.merge = function (options) {\r\n        return new RequestOptions({\r\n            method: options && options.method != null ? options.method : this.method,\r\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\r\n            body: options && options.body != null ? options.body : this.body,\r\n            url: options && options.url != null ? options.url : this.url,\r\n            params: options && this._mergeSearchParams(options.params || options.search),\r\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\r\n                this.withCredentials,\r\n            responseType: options && options.responseType != null ? options.responseType :\r\n                this.responseType\r\n        });\r\n    };\r\n    RequestOptions.prototype._mergeSearchParams = function (params) {\r\n        if (!params)\r\n            return this.params;\r\n        if (params instanceof URLSearchParams) {\r\n            return params.clone();\r\n        }\r\n        if (typeof params === 'string') {\r\n            return new URLSearchParams(params);\r\n        }\r\n        return this._parseParams(params);\r\n    };\r\n    RequestOptions.prototype._parseParams = function (objParams) {\r\n        var _this = this;\r\n        if (objParams === void 0) { objParams = {}; }\r\n        var params = new URLSearchParams();\r\n        Object.keys(objParams).forEach(function (key) {\r\n            var value = objParams[key];\r\n            if (Array.isArray(value)) {\r\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\r\n            }\r\n            else {\r\n                _this._appendParam(key, value, params);\r\n            }\r\n        });\r\n        return params;\r\n    };\r\n    RequestOptions.prototype._appendParam = function (key, value, params) {\r\n        if (typeof value !== 'string') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        params.append(key, value);\r\n    };\r\n    return RequestOptions;\r\n}());\r\n/**\r\n * Subclass of {@link RequestOptions}, with default values.\r\n *\r\n * Default values:\r\n *  * method: {@link RequestMethod RequestMethod.Get}\r\n *  * headers: empty {@link Headers} object\r\n *\r\n * This class could be extended and bound to the {@link RequestOptions} class\r\n * when configuring an {@link Injector}, in order to override the default options\r\n * used by {@link Http} to create and send {@link Request Requests}.\r\n *\r\n * ```typescript\r\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\r\n *\r\n * class MyOptions extends BaseRequestOptions {\r\n *   search: string = 'coreTeam=true';\r\n * }\r\n *\r\n * {provide: RequestOptions, useClass: MyOptions};\r\n * ```\r\n *\r\n * The options could also be extended when manually creating a {@link Request}\r\n * object.\r\n *\r\n * ```\r\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\r\n *\r\n * const options = new BaseRequestOptions();\r\n * const req = new Request(options.merge({\r\n *   method: RequestMethod.Post,\r\n *   url: 'https://google.com'\r\n * }));\r\n * console.log('req.method:', RequestMethod[req.method]); // Post\r\n * console.log('options.url:', options.url); // null\r\n * console.log('req.url:', req.url); // https://google.com\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar BaseRequestOptions = /** @class */ (function (_super) {\r\n    __extends(BaseRequestOptions, _super);\r\n    function BaseRequestOptions() {\r\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\r\n    }\r\n    BaseRequestOptions = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], BaseRequestOptions);\r\n    return BaseRequestOptions;\r\n}(RequestOptions));\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// TODO(jeffbcross): properly implement body accessors\r\n/**\r\n * Creates `Request` instances from provided values.\r\n *\r\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#request-class),\r\n * but is considered a static value whose body can be accessed many times. There are other\r\n * differences in the implementation, but this is the most significant.\r\n *\r\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\r\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\r\n * One such example is when creating services that wrap higher-level services, like {@link Http},\r\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\r\n *\r\n * ```typescript\r\n * import {Injectable, Injector} from '@angular/core';\r\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\r\n *\r\n * @Injectable()\r\n * class AutoAuthenticator {\r\n *   constructor(public http:Http) {}\r\n *   request(url:string) {\r\n *     return this.http.request(new Request({\r\n *       method: RequestMethod.Get,\r\n *       url: url,\r\n *       search: 'password=123'\r\n *     }));\r\n *   }\r\n * }\r\n *\r\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\r\n * var authenticator = injector.get(AutoAuthenticator);\r\n * authenticator.request('people.json').subscribe(res => {\r\n *   //URL should have included '?password=123'\r\n *   console.log('people', res.json());\r\n * });\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar Request = /** @class */ (function (_super) {\r\n    __extends(Request, _super);\r\n    function Request(requestOptions) {\r\n        var _this = _super.call(this) || this;\r\n        // TODO: assert that url is present\r\n        var url = requestOptions.url;\r\n        _this.url = requestOptions.url;\r\n        var paramsArg = requestOptions.params || requestOptions.search;\r\n        if (paramsArg) {\r\n            var params = void 0;\r\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\r\n                params = urlEncodeParams(paramsArg).toString();\r\n            }\r\n            else {\r\n                params = paramsArg.toString();\r\n            }\r\n            if (params.length > 0) {\r\n                var prefix = '?';\r\n                if (_this.url.indexOf('?') != -1) {\r\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\r\n                }\r\n                // TODO: just delete search-query-looking string in url?\r\n                _this.url = url + prefix + params;\r\n            }\r\n        }\r\n        _this._body = requestOptions.body;\r\n        _this.method = normalizeMethodName(requestOptions.method);\r\n        // TODO(jeffbcross): implement behavior\r\n        // Defaults to 'omit', consistent with browser\r\n        _this.headers = new Headers(requestOptions.headers);\r\n        _this.contentType = _this.detectContentType();\r\n        _this.withCredentials = requestOptions.withCredentials;\r\n        _this.responseType = requestOptions.responseType;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns the content type enum based on header options.\r\n     */\r\n    Request.prototype.detectContentType = function () {\r\n        switch (this.headers.get('content-type')) {\r\n            case 'application/json':\r\n                return ContentType.JSON;\r\n            case 'application/x-www-form-urlencoded':\r\n                return ContentType.FORM;\r\n            case 'multipart/form-data':\r\n                return ContentType.FORM_DATA;\r\n            case 'text/plain':\r\n            case 'text/html':\r\n                return ContentType.TEXT;\r\n            case 'application/octet-stream':\r\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\r\n            default:\r\n                return this.detectContentTypeFromBody();\r\n        }\r\n    };\r\n    /**\r\n     * Returns the content type of request's body based on its type.\r\n     */\r\n    Request.prototype.detectContentTypeFromBody = function () {\r\n        if (this._body == null) {\r\n            return ContentType.NONE;\r\n        }\r\n        else if (this._body instanceof URLSearchParams) {\r\n            return ContentType.FORM;\r\n        }\r\n        else if (this._body instanceof FormData) {\r\n            return ContentType.FORM_DATA;\r\n        }\r\n        else if (this._body instanceof Blob$1) {\r\n            return ContentType.BLOB;\r\n        }\r\n        else if (this._body instanceof ArrayBuffer$1) {\r\n            return ContentType.ARRAY_BUFFER;\r\n        }\r\n        else if (this._body && typeof this._body === 'object') {\r\n            return ContentType.JSON;\r\n        }\r\n        else {\r\n            return ContentType.TEXT;\r\n        }\r\n    };\r\n    /**\r\n     * Returns the request's body according to its type. If body is undefined, return\r\n     * null.\r\n     */\r\n    Request.prototype.getBody = function () {\r\n        switch (this.contentType) {\r\n            case ContentType.JSON:\r\n                return this.text();\r\n            case ContentType.FORM:\r\n                return this.text();\r\n            case ContentType.FORM_DATA:\r\n                return this._body;\r\n            case ContentType.TEXT:\r\n                return this.text();\r\n            case ContentType.BLOB:\r\n                return this.blob();\r\n            case ContentType.ARRAY_BUFFER:\r\n                return this.arrayBuffer();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    return Request;\r\n}(Body));\r\nfunction urlEncodeParams(params) {\r\n    var searchParams = new URLSearchParams();\r\n    Object.keys(params).forEach(function (key) {\r\n        var value = params[key];\r\n        if (value && Array.isArray(value)) {\r\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\r\n        }\r\n        else {\r\n            searchParams.append(key, value.toString());\r\n        }\r\n    });\r\n    return searchParams;\r\n}\r\nvar noop = function () { };\r\nvar w = typeof window == 'object' ? window : noop;\r\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\r\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\r\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction httpRequest(backend, request) {\r\n    return backend.createConnection(request).response;\r\n}\r\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\r\n    var newOptions = defaultOpts;\r\n    if (providedOpts) {\r\n        // Hack so Dart can used named parameters\r\n        return newOptions.merge(new RequestOptions({\r\n            method: providedOpts.method || method,\r\n            url: providedOpts.url || url,\r\n            search: providedOpts.search,\r\n            params: providedOpts.params,\r\n            headers: providedOpts.headers,\r\n            body: providedOpts.body,\r\n            withCredentials: providedOpts.withCredentials,\r\n            responseType: providedOpts.responseType\r\n        }));\r\n    }\r\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\r\n}\r\n/**\r\n * Performs http requests using `XMLHttpRequest` as the default backend.\r\n *\r\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\r\n * `request` returns an `Observable` which will emit a single {@link Response} when a\r\n * response is received.\r\n *\r\n * @usageNotes\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\r\n * import {map} from 'rxjs/operators';\r\n *\r\n * @Component({\r\n *   selector: 'http-app',\r\n *   viewProviders: [HTTP_PROVIDERS],\r\n *   templateUrl: 'people.html'\r\n * })\r\n * class PeopleComponent {\r\n *   constructor(http: Http) {\r\n *     http.get('people.json')\r\n *       // Call map on the response observable to get the parsed people object\r\n *       .pipe(map(res => res.json()))\r\n *       // Subscribe to the observable to get the parsed people object and attach it to the\r\n *       // component\r\n *       .subscribe(people => this.people = people);\r\n *   }\r\n * }\r\n * ```\r\n *\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\r\n * ```\r\n *\r\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\r\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\r\n * the {@link XHRBackend} provider, as in the following example:\r\n *\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {BaseRequestOptions, Http} from '@angular/http';\r\n * import {MockBackend} from '@angular/http/testing';\r\n * var injector = Injector.resolveAndCreate([\r\n *   BaseRequestOptions,\r\n *   MockBackend,\r\n *   {provide: Http, useFactory:\r\n *       function(backend, defaultOptions) {\r\n *         return new Http(backend, defaultOptions);\r\n *       },\r\n *       deps: [MockBackend, BaseRequestOptions]}\r\n * ]);\r\n * var http = injector.get(Http);\r\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar Http = /** @class */ (function () {\r\n    function Http(_backend, _defaultOptions) {\r\n        this._backend = _backend;\r\n        this._defaultOptions = _defaultOptions;\r\n    }\r\n    /**\r\n     * Performs any type of http request. First argument is required, and can either be a url or\r\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\r\n     * object can be provided as the 2nd argument. The options object will be merged with the values\r\n     * of {@link BaseRequestOptions} before performing the request.\r\n     */\r\n    Http.prototype.request = function (url, options) {\r\n        var responseObservable;\r\n        if (typeof url === 'string') {\r\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\r\n        }\r\n        else if (url instanceof Request) {\r\n            responseObservable = httpRequest(this._backend, url);\r\n        }\r\n        else {\r\n            throw new Error('First argument must be a url string or Request instance.');\r\n        }\r\n        return responseObservable;\r\n    };\r\n    /**\r\n     * Performs a request with `get` http method.\r\n     */\r\n    Http.prototype.get = function (url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\r\n    };\r\n    /**\r\n     * Performs a request with `post` http method.\r\n     */\r\n    Http.prototype.post = function (url, body, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\r\n    };\r\n    /**\r\n     * Performs a request with `put` http method.\r\n     */\r\n    Http.prototype.put = function (url, body, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\r\n    };\r\n    /**\r\n     * Performs a request with `delete` http method.\r\n     */\r\n    Http.prototype.delete = function (url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\r\n    };\r\n    /**\r\n     * Performs a request with `patch` http method.\r\n     */\r\n    Http.prototype.patch = function (url, body, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\r\n    };\r\n    /**\r\n     * Performs a request with `head` http method.\r\n     */\r\n    Http.prototype.head = function (url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\r\n    };\r\n    /**\r\n     * Performs a request with `options` http method.\r\n     */\r\n    Http.prototype.options = function (url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\r\n    };\r\n    Http = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\r\n    ], Http);\r\n    return Http;\r\n}());\r\n/**\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar Jsonp = /** @class */ (function (_super) {\r\n    __extends(Jsonp, _super);\r\n    function Jsonp(backend, defaultOptions) {\r\n        return _super.call(this, backend, defaultOptions) || this;\r\n    }\r\n    /**\r\n     * Performs any type of http request. First argument is required, and can either be a url or\r\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\r\n     * object can be provided as the 2nd argument. The options object will be merged with the values\r\n     * of {@link BaseRequestOptions} before performing the request.\r\n     *\r\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\r\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\r\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\r\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\r\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\r\n     * future security issues (e.g. content sniffing).  For more detail, see the\r\n     * [Security Guide](http://g.co/ng/security).\r\n     */\r\n    Jsonp.prototype.request = function (url, options) {\r\n        var responseObservable;\r\n        if (typeof url === 'string') {\r\n            url =\r\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\r\n        }\r\n        if (url instanceof Request) {\r\n            if (url.method !== RequestMethod.Get) {\r\n                throw new Error('JSONP requests must use GET request method.');\r\n            }\r\n            responseObservable = httpRequest(this._backend, url);\r\n        }\r\n        else {\r\n            throw new Error('First argument must be a url string or Request instance.');\r\n        }\r\n        return responseObservable;\r\n    };\r\n    Jsonp = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\r\n    ], Jsonp);\r\n    return Jsonp;\r\n}(Http));\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction _createDefaultCookieXSRFStrategy() {\r\n    return new CookieXSRFStrategy();\r\n}\r\nfunction httpFactory(xhrBackend, requestOptions) {\r\n    return new Http(xhrBackend, requestOptions);\r\n}\r\nfunction jsonpFactory(jsonpBackend, requestOptions) {\r\n    return new Jsonp(jsonpBackend, requestOptions);\r\n}\r\n/**\r\n * The module that includes http's providers\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar HttpModule = /** @class */ (function () {\r\n    function HttpModule() {\r\n    }\r\n    HttpModule = __decorate([\r\n        NgModule({\r\n            providers: [\r\n                // TODO(pascal): use factory type annotations once supported in DI\r\n                // issue: https://github.com/angular/angular/issues/3183\r\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\r\n                BrowserXhr,\r\n                { provide: RequestOptions, useClass: BaseRequestOptions },\r\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n                XHRBackend,\r\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\r\n            ],\r\n        })\r\n    ], HttpModule);\r\n    return HttpModule;\r\n}());\r\n/**\r\n * The module that includes jsonp's providers\r\n *\r\n * @deprecated see https://angular.io/api/common/http/HttpClient#jsonp\r\n * @publicApi\r\n */\r\nvar JsonpModule = /** @class */ (function () {\r\n    function JsonpModule() {\r\n    }\r\n    JsonpModule = __decorate([\r\n        NgModule({\r\n            providers: [\r\n                // TODO(pascal): use factory type annotations once supported in DI\r\n                // issue: https://github.com/angular/angular/issues/3183\r\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\r\n                BrowserJsonp,\r\n                { provide: RequestOptions, useClass: BaseRequestOptions },\r\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n                JSONPBackend,\r\n            ],\r\n        })\r\n    ], JsonpModule);\r\n    return JsonpModule;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @deprecated see https://angular.io/guide/http\r\n * @publicApi\r\n */\r\nvar VERSION = new Version('7.2.11');\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// This file only reexports content of the `src` folder. Keep it that way.\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\r\n//# sourceMappingURL=http.js.map\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require(\"@angular/core\");\r\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\r\nvar FileDropDirective = (function () {\r\n    function FileDropDirective(element) {\r\n        this.fileOver = new core_1.EventEmitter();\r\n        this.onFileDrop = new core_1.EventEmitter();\r\n        this.element = element;\r\n    }\r\n    FileDropDirective.prototype.getOptions = function () {\r\n        return this.uploader.options;\r\n    };\r\n    FileDropDirective.prototype.getFilters = function () {\r\n        return {};\r\n    };\r\n    FileDropDirective.prototype.onDrop = function (event) {\r\n        var transfer = this._getTransfer(event);\r\n        if (!transfer) {\r\n            return;\r\n        }\r\n        var options = this.getOptions();\r\n        var filters = this.getFilters();\r\n        this._preventAndStop(event);\r\n        this.uploader.addToQueue(transfer.files, options, filters);\r\n        this.fileOver.emit(false);\r\n        this.onFileDrop.emit(transfer.files);\r\n    };\r\n    FileDropDirective.prototype.onDragOver = function (event) {\r\n        var transfer = this._getTransfer(event);\r\n        if (!this._haveFiles(transfer.types)) {\r\n            return;\r\n        }\r\n        transfer.dropEffect = 'copy';\r\n        this._preventAndStop(event);\r\n        this.fileOver.emit(true);\r\n    };\r\n    FileDropDirective.prototype.onDragLeave = function (event) {\r\n        if (this.element) {\r\n            if (event.currentTarget === this.element[0]) {\r\n                return;\r\n            }\r\n        }\r\n        this._preventAndStop(event);\r\n        this.fileOver.emit(false);\r\n    };\r\n    FileDropDirective.prototype._getTransfer = function (event) {\r\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\r\n    };\r\n    FileDropDirective.prototype._preventAndStop = function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n    FileDropDirective.prototype._haveFiles = function (types) {\r\n        if (!types) {\r\n            return false;\r\n        }\r\n        if (types.indexOf) {\r\n            return types.indexOf('Files') !== -1;\r\n        }\r\n        else if (types.contains) {\r\n            return types.contains('Files');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return FileDropDirective;\r\n}());\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\r\n], FileDropDirective.prototype, \"uploader\", void 0);\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", core_1.EventEmitter)\r\n], FileDropDirective.prototype, \"fileOver\", void 0);\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", core_1.EventEmitter)\r\n], FileDropDirective.prototype, \"onFileDrop\", void 0);\r\n__decorate([\r\n    core_1.HostListener('drop', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], FileDropDirective.prototype, \"onDrop\", null);\r\n__decorate([\r\n    core_1.HostListener('dragover', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], FileDropDirective.prototype, \"onDragOver\", null);\r\n__decorate([\r\n    core_1.HostListener('dragleave', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Object)\r\n], FileDropDirective.prototype, \"onDragLeave\", null);\r\nFileDropDirective = __decorate([\r\n    core_1.Directive({ selector: '[ng2FileDrop]' }),\r\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\r\n], FileDropDirective);\r\nexports.FileDropDirective = FileDropDirective;\r\n","\"use strict\";\r\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\r\nvar FileItem = (function () {\r\n    function FileItem(uploader, some, options) {\r\n        this.url = '/';\r\n        this.headers = [];\r\n        this.withCredentials = true;\r\n        this.formData = [];\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.uploader = uploader;\r\n        this.some = some;\r\n        this.options = options;\r\n        this.file = new file_like_object_class_1.FileLikeObject(some);\r\n        this._file = some;\r\n        if (uploader.options) {\r\n            this.method = uploader.options.method || 'POST';\r\n            this.alias = uploader.options.itemAlias || 'file';\r\n        }\r\n        this.url = uploader.options.url;\r\n    }\r\n    FileItem.prototype.upload = function () {\r\n        try {\r\n            this.uploader.uploadItem(this);\r\n        }\r\n        catch (e) {\r\n            this.uploader._onCompleteItem(this, '', 0, {});\r\n            this.uploader._onErrorItem(this, '', 0, {});\r\n        }\r\n    };\r\n    FileItem.prototype.cancel = function () {\r\n        this.uploader.cancelItem(this);\r\n    };\r\n    FileItem.prototype.remove = function () {\r\n        this.uploader.removeFromQueue(this);\r\n    };\r\n    FileItem.prototype.onBeforeUpload = function () {\r\n        return void 0;\r\n    };\r\n    FileItem.prototype.onBuildForm = function (form) {\r\n        return { form: form };\r\n    };\r\n    FileItem.prototype.onProgress = function (progress) {\r\n        return { progress: progress };\r\n    };\r\n    FileItem.prototype.onSuccess = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onError = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onCancel = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onComplete = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype._onBeforeUpload = function () {\r\n        this.isReady = true;\r\n        this.isUploading = true;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.onBeforeUpload();\r\n    };\r\n    FileItem.prototype._onBuildForm = function (form) {\r\n        this.onBuildForm(form);\r\n    };\r\n    FileItem.prototype._onProgress = function (progress) {\r\n        this.progress = progress;\r\n        this.onProgress(progress);\r\n    };\r\n    FileItem.prototype._onSuccess = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = true;\r\n        this.isSuccess = true;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 100;\r\n        this.index = void 0;\r\n        this.onSuccess(response, status, headers);\r\n    };\r\n    FileItem.prototype._onError = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = true;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = true;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.onError(response, status, headers);\r\n    };\r\n    FileItem.prototype._onCancel = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = true;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.onCancel(response, status, headers);\r\n    };\r\n    FileItem.prototype._onComplete = function (response, status, headers) {\r\n        this.onComplete(response, status, headers);\r\n        if (this.uploader.options.removeAfterUpload) {\r\n            this.remove();\r\n        }\r\n    };\r\n    FileItem.prototype._prepareToUploading = function () {\r\n        this.index = this.index || ++this.uploader._nextIndex;\r\n        this.isReady = true;\r\n    };\r\n    return FileItem;\r\n}());\r\nexports.FileItem = FileItem;\r\n","\"use strict\";\r\nfunction isElement(node) {\r\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\r\n}\r\nvar FileLikeObject = (function () {\r\n    function FileLikeObject(fileOrInput) {\r\n        this.rawFile = fileOrInput;\r\n        var isInput = isElement(fileOrInput);\r\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\r\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\r\n        var method = '_createFrom' + postfix;\r\n        this[method](fakePathOrObject);\r\n    }\r\n    FileLikeObject.prototype._createFromFakePath = function (path) {\r\n        this.lastModifiedDate = void 0;\r\n        this.size = void 0;\r\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\r\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\r\n    };\r\n    FileLikeObject.prototype._createFromObject = function (object) {\r\n        this.size = object.size;\r\n        this.type = object.type;\r\n        this.name = object.name;\r\n    };\r\n    return FileLikeObject;\r\n}());\r\nexports.FileLikeObject = FileLikeObject;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require(\"@angular/core\");\r\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\r\nvar FileSelectDirective = (function () {\r\n    function FileSelectDirective(element) {\r\n        this.onFileSelected = new core_1.EventEmitter();\r\n        this.element = element;\r\n    }\r\n    FileSelectDirective.prototype.getOptions = function () {\r\n        return this.uploader.options;\r\n    };\r\n    FileSelectDirective.prototype.getFilters = function () {\r\n        return {};\r\n    };\r\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\r\n        return !!this.element.nativeElement.attributes.multiple;\r\n    };\r\n    FileSelectDirective.prototype.onChange = function () {\r\n        var files = this.element.nativeElement.files;\r\n        var options = this.getOptions();\r\n        var filters = this.getFilters();\r\n        this.uploader.addToQueue(files, options, filters);\r\n        this.onFileSelected.emit(files);\r\n        if (this.isEmptyAfterSelection()) {\r\n            this.element.nativeElement.value = '';\r\n        }\r\n    };\r\n    return FileSelectDirective;\r\n}());\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\r\n], FileSelectDirective.prototype, \"uploader\", void 0);\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", core_1.EventEmitter)\r\n], FileSelectDirective.prototype, \"onFileSelected\", void 0);\r\n__decorate([\r\n    core_1.HostListener('change'),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Object)\r\n], FileSelectDirective.prototype, \"onChange\", null);\r\nFileSelectDirective = __decorate([\r\n    core_1.Directive({ selector: '[ng2FileSelect]' }),\r\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\r\n], FileSelectDirective);\r\nexports.FileSelectDirective = FileSelectDirective;\r\n","\"use strict\";\r\nvar FileType = (function () {\r\n    function FileType() {\r\n    }\r\n    FileType.getMimeClass = function (file) {\r\n        var mimeClass = 'application';\r\n        if (this.mime_psd.indexOf(file.type) !== -1) {\r\n            mimeClass = 'image';\r\n        }\r\n        else if (file.type.match('image.*')) {\r\n            mimeClass = 'image';\r\n        }\r\n        else if (file.type.match('video.*')) {\r\n            mimeClass = 'video';\r\n        }\r\n        else if (file.type.match('audio.*')) {\r\n            mimeClass = 'audio';\r\n        }\r\n        else if (file.type === 'application/pdf') {\r\n            mimeClass = 'pdf';\r\n        }\r\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\r\n            mimeClass = 'compress';\r\n        }\r\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\r\n            mimeClass = 'doc';\r\n        }\r\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\r\n            mimeClass = 'xls';\r\n        }\r\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\r\n            mimeClass = 'ppt';\r\n        }\r\n        if (mimeClass === 'application') {\r\n            mimeClass = this.fileTypeDetection(file.name);\r\n        }\r\n        return mimeClass;\r\n    };\r\n    FileType.fileTypeDetection = function (inputFilename) {\r\n        var types = {\r\n            'jpg': 'image',\r\n            'jpeg': 'image',\r\n            'tif': 'image',\r\n            'psd': 'image',\r\n            'bmp': 'image',\r\n            'png': 'image',\r\n            'nef': 'image',\r\n            'tiff': 'image',\r\n            'cr2': 'image',\r\n            'dwg': 'image',\r\n            'cdr': 'image',\r\n            'ai': 'image',\r\n            'indd': 'image',\r\n            'pin': 'image',\r\n            'cdp': 'image',\r\n            'skp': 'image',\r\n            'stp': 'image',\r\n            '3dm': 'image',\r\n            'mp3': 'audio',\r\n            'wav': 'audio',\r\n            'wma': 'audio',\r\n            'mod': 'audio',\r\n            'm4a': 'audio',\r\n            'compress': 'compress',\r\n            'zip': 'compress',\r\n            'rar': 'compress',\r\n            '7z': 'compress',\r\n            'lz': 'compress',\r\n            'z01': 'compress',\r\n            'pdf': 'pdf',\r\n            'xls': 'xls',\r\n            'xlsx': 'xls',\r\n            'ods': 'xls',\r\n            'mp4': 'video',\r\n            'avi': 'video',\r\n            'wmv': 'video',\r\n            'mpg': 'video',\r\n            'mts': 'video',\r\n            'flv': 'video',\r\n            '3gp': 'video',\r\n            'vob': 'video',\r\n            'm4v': 'video',\r\n            'mpeg': 'video',\r\n            'm2ts': 'video',\r\n            'mov': 'video',\r\n            'doc': 'doc',\r\n            'docx': 'doc',\r\n            'eps': 'doc',\r\n            'txt': 'doc',\r\n            'odt': 'doc',\r\n            'rtf': 'doc',\r\n            'ppt': 'ppt',\r\n            'pptx': 'ppt',\r\n            'pps': 'ppt',\r\n            'ppsx': 'ppt',\r\n            'odp': 'ppt'\r\n        };\r\n        var chunks = inputFilename.split('.');\r\n        if (chunks.length < 2) {\r\n            return 'application';\r\n        }\r\n        var extension = chunks[chunks.length - 1].toLowerCase();\r\n        if (types[extension] === undefined) {\r\n            return 'application';\r\n        }\r\n        else {\r\n            return types[extension];\r\n        }\r\n    };\r\n    return FileType;\r\n}());\r\n/*  MS office  */\r\nFileType.mime_doc = [\r\n    'application/msword',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\r\n    'application/vnd.ms-word.document.macroEnabled.12',\r\n    'application/vnd.ms-word.template.macroEnabled.12'\r\n];\r\nFileType.mime_xsl = [\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\r\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\r\n    'application/vnd.ms-excel.template.macroEnabled.12',\r\n    'application/vnd.ms-excel.addin.macroEnabled.12',\r\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\r\n];\r\nFileType.mime_ppt = [\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\r\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\r\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\r\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\r\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\r\n];\r\n/* PSD */\r\nFileType.mime_psd = [\r\n    'image/photoshop',\r\n    'image/x-photoshop',\r\n    'image/psd',\r\n    'application/photoshop',\r\n    'application/psd',\r\n    'zz-application/zz-winassoc-psd'\r\n];\r\n/* Compressed files */\r\nFileType.mime_compress = [\r\n    'application/x-gtar',\r\n    'application/x-gcompress',\r\n    'application/compress',\r\n    'application/x-tar',\r\n    'application/x-rar-compressed',\r\n    'application/octet-stream'\r\n];\r\nexports.FileType = FileType;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar common_1 = require(\"@angular/common\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar file_drop_directive_1 = require(\"./file-drop.directive\");\r\nvar file_select_directive_1 = require(\"./file-select.directive\");\r\nvar FileUploadModule = (function () {\r\n    function FileUploadModule() {\r\n    }\r\n    return FileUploadModule;\r\n}());\r\nFileUploadModule = __decorate([\r\n    core_1.NgModule({\r\n        imports: [common_1.CommonModule],\r\n        declarations: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective],\r\n        exports: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective]\r\n    })\r\n], FileUploadModule);\r\nexports.FileUploadModule = FileUploadModule;\r\n","\"use strict\";\r\nvar core_1 = require(\"@angular/core\");\r\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\r\nvar file_item_class_1 = require(\"./file-item.class\");\r\nvar file_type_class_1 = require(\"./file-type.class\");\r\nfunction isFile(value) {\r\n    return (File && value instanceof File);\r\n}\r\nvar FileUploader = (function () {\r\n    function FileUploader(options) {\r\n        this.isUploading = false;\r\n        this.queue = [];\r\n        this.progress = 0;\r\n        this._nextIndex = 0;\r\n        this.options = {\r\n            autoUpload: false,\r\n            isHTML5: true,\r\n            filters: [],\r\n            removeAfterUpload: false,\r\n            disableMultipart: false,\r\n            formatDataFunction: function (item) { return item._file; },\r\n            formatDataFunctionIsAsync: false\r\n        };\r\n        this.setOptions(options);\r\n        this.response = new core_1.EventEmitter();\r\n    }\r\n    FileUploader.prototype.setOptions = function (options) {\r\n        this.options = Object.assign(this.options, options);\r\n        this.authToken = this.options.authToken;\r\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\r\n        this.autoUpload = this.options.autoUpload;\r\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\r\n        if (this.options.maxFileSize) {\r\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\r\n        }\r\n        if (this.options.allowedFileType) {\r\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\r\n        }\r\n        if (this.options.allowedMimeType) {\r\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\r\n        }\r\n        for (var i = 0; i < this.queue.length; i++) {\r\n            this.queue[i].url = this.options.url;\r\n        }\r\n    };\r\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\r\n        var _this = this;\r\n        var list = [];\r\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\r\n            var file = files_1[_i];\r\n            list.push(file);\r\n        }\r\n        var arrayOfFilters = this._getFilters(filters);\r\n        var count = this.queue.length;\r\n        var addedFileItems = [];\r\n        list.map(function (some) {\r\n            if (!options) {\r\n                options = _this.options;\r\n            }\r\n            var temp = new file_like_object_class_1.FileLikeObject(some);\r\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\r\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\r\n                addedFileItems.push(fileItem);\r\n                _this.queue.push(fileItem);\r\n                _this._onAfterAddingFile(fileItem);\r\n            }\r\n            else {\r\n                var filter = arrayOfFilters[_this._failFilterIndex];\r\n                _this._onWhenAddingFileFailed(temp, filter, options);\r\n            }\r\n        });\r\n        if (this.queue.length !== count) {\r\n            this._onAfterAddingAll(addedFileItems);\r\n            this.progress = this._getTotalProgress();\r\n        }\r\n        this._render();\r\n        if (this.options.autoUpload) {\r\n            this.uploadAll();\r\n        }\r\n    };\r\n    FileUploader.prototype.removeFromQueue = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        if (item.isUploading) {\r\n            item.cancel();\r\n        }\r\n        this.queue.splice(index, 1);\r\n        this.progress = this._getTotalProgress();\r\n    };\r\n    FileUploader.prototype.clearQueue = function () {\r\n        while (this.queue.length) {\r\n            this.queue[0].remove();\r\n        }\r\n        this.progress = 0;\r\n    };\r\n    FileUploader.prototype.uploadItem = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\r\n        item._prepareToUploading();\r\n        if (this.isUploading) {\r\n            return;\r\n        }\r\n        this.isUploading = true;\r\n        this[transport](item);\r\n    };\r\n    FileUploader.prototype.cancelItem = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        var prop = this.options.isHTML5 ? item._xhr : item._form;\r\n        if (item && item.isUploading) {\r\n            prop.abort();\r\n        }\r\n    };\r\n    FileUploader.prototype.uploadAll = function () {\r\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\r\n        if (!items.length) {\r\n            return;\r\n        }\r\n        items.map(function (item) { return item._prepareToUploading(); });\r\n        items[0].upload();\r\n    };\r\n    FileUploader.prototype.cancelAll = function () {\r\n        var items = this.getNotUploadedItems();\r\n        items.map(function (item) { return item.cancel(); });\r\n    };\r\n    FileUploader.prototype.isFile = function (value) {\r\n        return isFile(value);\r\n    };\r\n    FileUploader.prototype.isFileLikeObject = function (value) {\r\n        return value instanceof file_like_object_class_1.FileLikeObject;\r\n    };\r\n    FileUploader.prototype.getIndexOfItem = function (value) {\r\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\r\n    };\r\n    FileUploader.prototype.getNotUploadedItems = function () {\r\n        return this.queue.filter(function (item) { return !item.isUploaded; });\r\n    };\r\n    FileUploader.prototype.getReadyItems = function () {\r\n        return this.queue\r\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\r\n            .sort(function (item1, item2) { return item1.index - item2.index; });\r\n    };\r\n    FileUploader.prototype.destroy = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\r\n        return { fileItems: fileItems };\r\n    };\r\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\r\n        return { fileItem: fileItem, form: form };\r\n    };\r\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\r\n        return { fileItem: fileItem };\r\n    };\r\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\r\n        return { item: item, filter: filter, options: options };\r\n    };\r\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\r\n        return { fileItem: fileItem };\r\n    };\r\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\r\n        return { fileItem: fileItem, progress: progress };\r\n    };\r\n    FileUploader.prototype.onProgressAll = function (progress) {\r\n        return { progress: progress };\r\n    };\r\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteAll = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype._mimeTypeFilter = function (item) {\r\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\r\n    };\r\n    FileUploader.prototype._fileSizeFilter = function (item) {\r\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\r\n    };\r\n    FileUploader.prototype._fileTypeFilter = function (item) {\r\n        return !(this.options.allowedFileType &&\r\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\r\n    };\r\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\r\n        item._onError(response, status, headers);\r\n        this.onErrorItem(item, response, status, headers);\r\n    };\r\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\r\n        item._onComplete(response, status, headers);\r\n        this.onCompleteItem(item, response, status, headers);\r\n        var nextItem = this.getReadyItems()[0];\r\n        this.isUploading = false;\r\n        if (nextItem) {\r\n            nextItem.upload();\r\n            return;\r\n        }\r\n        this.onCompleteAll();\r\n        this.progress = this._getTotalProgress();\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\r\n        return function (name) {\r\n            if (name) {\r\n                return parsedHeaders[name.toLowerCase()] || void 0;\r\n            }\r\n            return parsedHeaders;\r\n        };\r\n    };\r\n    FileUploader.prototype._xhrTransport = function (item) {\r\n        var _this = this;\r\n        var that = this;\r\n        var xhr = item._xhr = new XMLHttpRequest();\r\n        var sendable;\r\n        this._onBeforeUploadItem(item);\r\n        if (typeof item._file.size !== 'number') {\r\n            throw new TypeError('The file specified is no longer valid');\r\n        }\r\n        if (!this.options.disableMultipart) {\r\n            sendable = new FormData();\r\n            this._onBuildItemForm(item, sendable);\r\n            var appendFile = function () { return sendable.append(item.alias, item._file, item.file.name); };\r\n            if (!this.options.parametersBeforeFiles) {\r\n                appendFile();\r\n            }\r\n            // For AWS, Additional Parameters must come BEFORE Files\r\n            if (this.options.additionalParameter !== undefined) {\r\n                Object.keys(this.options.additionalParameter).forEach(function (key) {\r\n                    var paramVal = _this.options.additionalParameter[key];\r\n                    // Allow an additional parameter to include the filename\r\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\r\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\r\n                    }\r\n                    sendable.append(key, paramVal);\r\n                });\r\n            }\r\n            if (this.options.parametersBeforeFiles) {\r\n                appendFile();\r\n            }\r\n        }\r\n        else {\r\n            sendable = this.options.formatDataFunction(item);\r\n        }\r\n        xhr.upload.onprogress = function (event) {\r\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\r\n            _this._onProgressItem(item, progress);\r\n        };\r\n        xhr.onload = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\r\n            var method = '_on' + gist + 'Item';\r\n            _this[method](item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.onerror = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            _this._onErrorItem(item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.onabort = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            _this._onCancelItem(item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.open(item.method, item.url, true);\r\n        xhr.withCredentials = item.withCredentials;\r\n        if (this.options.headers) {\r\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\r\n                var header = _a[_i];\r\n                xhr.setRequestHeader(header.name, header.value);\r\n            }\r\n        }\r\n        if (item.headers.length) {\r\n            for (var _b = 0, _c = item.headers; _b < _c.length; _b++) {\r\n                var header = _c[_b];\r\n                xhr.setRequestHeader(header.name, header.value);\r\n            }\r\n        }\r\n        if (this.authToken) {\r\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\r\n        }\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                that.response.emit(xhr.responseText);\r\n            }\r\n        };\r\n        if (this.options.formatDataFunctionIsAsync) {\r\n            sendable.then(function (result) { return xhr.send(JSON.stringify(result)); });\r\n        }\r\n        else {\r\n            xhr.send(sendable);\r\n        }\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._getTotalProgress = function (value) {\r\n        if (value === void 0) { value = 0; }\r\n        if (this.options.removeAfterUpload) {\r\n            return value;\r\n        }\r\n        var notUploaded = this.getNotUploadedItems().length;\r\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\r\n        var ratio = 100 / this.queue.length;\r\n        var current = value * ratio / 100;\r\n        return Math.round(uploaded * ratio + current);\r\n    };\r\n    FileUploader.prototype._getFilters = function (filters) {\r\n        if (!filters) {\r\n            return this.options.filters;\r\n        }\r\n        if (Array.isArray(filters)) {\r\n            return filters;\r\n        }\r\n        if (typeof filters === 'string') {\r\n            var names_1 = filters.match(/[^\\s,]+/g);\r\n            return this.options.filters\r\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\r\n        }\r\n        return this.options.filters;\r\n    };\r\n    FileUploader.prototype._render = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype._queueLimitFilter = function () {\r\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\r\n    };\r\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\r\n        var _this = this;\r\n        this._failFilterIndex = -1;\r\n        return !filters.length ? true : filters.every(function (filter) {\r\n            _this._failFilterIndex++;\r\n            return filter.fn.call(_this, file, options);\r\n        });\r\n    };\r\n    FileUploader.prototype._isSuccessCode = function (status) {\r\n        return (status >= 200 && status < 300) || status === 304;\r\n    };\r\n    FileUploader.prototype._transformResponse = function (response, headers) {\r\n        return response;\r\n    };\r\n    FileUploader.prototype._parseHeaders = function (headers) {\r\n        var parsed = {};\r\n        var key;\r\n        var val;\r\n        var i;\r\n        if (!headers) {\r\n            return parsed;\r\n        }\r\n        headers.split('\\n').map(function (line) {\r\n            i = line.indexOf(':');\r\n            key = line.slice(0, i).trim().toLowerCase();\r\n            val = line.slice(i + 1).trim();\r\n            if (key) {\r\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n            }\r\n        });\r\n        return parsed;\r\n    };\r\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\r\n        this.onWhenAddingFileFailed(item, filter, options);\r\n    };\r\n    FileUploader.prototype._onAfterAddingFile = function (item) {\r\n        this.onAfterAddingFile(item);\r\n    };\r\n    FileUploader.prototype._onAfterAddingAll = function (items) {\r\n        this.onAfterAddingAll(items);\r\n    };\r\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\r\n        item._onBeforeUpload();\r\n        this.onBeforeUploadItem(item);\r\n    };\r\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\r\n        item._onBuildForm(form);\r\n        this.onBuildItemForm(item, form);\r\n    };\r\n    FileUploader.prototype._onProgressItem = function (item, progress) {\r\n        var total = this._getTotalProgress(progress);\r\n        this.progress = total;\r\n        item._onProgress(progress);\r\n        this.onProgressItem(item, progress);\r\n        this.onProgressAll(total);\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\r\n        item._onSuccess(response, status, headers);\r\n        this.onSuccessItem(item, response, status, headers);\r\n    };\r\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\r\n        item._onCancel(response, status, headers);\r\n        this.onCancelItem(item, response, status, headers);\r\n    };\r\n    return FileUploader;\r\n}());\r\nexports.FileUploader = FileUploader;\r\n","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require(\"./file-upload/file-select.directive\"));\r\n__export(require(\"./file-upload/file-drop.directive\"));\r\n__export(require(\"./file-upload/file-uploader.class\"));\r\n__export(require(\"./file-upload/file-item.class\"));\r\n__export(require(\"./file-upload/file-like-object.class\"));\r\nvar file_upload_module_1 = require(\"./file-upload/file-upload.module\");\r\nexports.FileUploadModule = file_upload_module_1.FileUploadModule;\r\n","export class BasicInformation\r\n{\r\n\tIdService: string\r\n\tServiceType: string\r\n\tTitle: string\r\n\tCountry: string\r\n\tCity: string\r\n\tImage: string\r\n\tValue: string\r\n}\r\n","export class ServiceFavorite \r\n{\r\n  IdServiceFavorite : string;\r\n  TypeService: string;\r\n  IdService: string;\r\n  IdUser: string;\r\n  IsFavorite: boolean;\r\n}","export class ServiceSpaceMultimedia\r\n{\r\n\tIdServiceSpaceMultimedia:string\r\n\tIdServiceType:string\r\n\tIdServiceSpace:string\r\n\tIdMultimediaType:string\r\n\tContent:string\r\n}","import { Injectable } from '@angular/core';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport { CacheStorageService } from '../services/cachestorage.service';\r\nimport { StorageServiceService } from '../services/storage-service.service';\r\nimport { GenericStorageService } from '../services/genericstorage.service';\r\n\r\nimport { Service } from '../modelos/service.model';\r\nimport { CoWorkingSpace } from '../modelos/coworkingspace.model';\r\nimport { ServiceSpaceItems } from '../modelos/ServiceSpaceItems.model';\r\nimport { ServiceSpaceContract } from '../modelos/servicespacecontact.model';\r\nimport { ServiceBenefit } from '../modelos/servicebenefit.model';\r\nimport { ServiceSpaceMultimedia } from '../modelos/servicespacemultimedia.model';\r\nimport { ServiceTransport } from '../modelos/servicetransport.model';\r\nimport {ServiceAttractions} from '../modelos/serviceattractions.model';\r\nimport { ServiceSchedule } from '../modelos/serviceschedule.model';\r\nimport { ServiceAditionals } from '../modelos/serviceaditionals.model';\r\nimport { ServiceSpaceBenefit } from '../modelos/servicespacebenefit.model';\r\nimport { Coordinate } from '../modelos/coordinate.model';\r\nimport { RegisterResponse } from '../modelos/Response/RegisterResponse.model';\r\nimport { MultimediaType } from '../modelos/multimediatype.model';\r\nimport {UrlBackendServices} from './AppServiceGlobal';\r\nimport { ImageResponse } from '../modelos/Response/ImageResponse.model';\r\nimport { AccommodationSpace } from '../modelos/accommodationspace.model';\r\nimport { ExclusivenessType } from '../modelos/exclusivenesstype.model';\r\nimport { SpaceType } from '../modelos/spacetype.model';\r\nimport { RoomSpaceItems } from '../modelos/RoomSpaceItems.model';\r\nimport { RoomSpace } from '../modelos/RoomSpace.model';\r\nimport { HotelSpace } from '../modelos/hotelspace.model';\r\nimport { ServiceName } from '../modelos/servicename.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PublicacionesServiceService\r\n{\r\n  NombreTipoServicio : string;\r\n  UrlRegistroCoWorking = UrlBackendServices + \"/api/CoWorking\";\r\n  UrlRegistroAlojamiento = UrlBackendServices + \"/api/Accommodation\";\r\n  UrlRegistroHotel = UrlBackendServices + \"/api/Hotel\";\r\n  UrlImage = UrlBackendServices + \"/api/Image\";\r\n\r\n  InfoService : Service;\r\n  InfoServiceName : ServiceName;\r\n  InfoCoordinate : Coordinate;\r\n  InfoCoWorkingSpace\t: CoWorkingSpace[];\t\r\n  InfoAccommodationSpace\t: AccommodationSpace[];\t\r\n  InfoHotelSpace : HotelSpace[];\r\n  InfoServiceTransport\t: ServiceTransport[];\t\r\n  InfoServiceAttractions\t: ServiceAttractions[];\t\r\n  InfoServiceSchedule\t: ServiceSchedule[];\t\t\r\n  InfoServiceAditionals\t: ServiceAditionals[];\t\t\r\n  InfoServiceBenefit : ServiceBenefit[];\t\r\n  InfoRoomSpace : RoomSpace[] = [];\r\n  InfoServiceSpaceMultimediaPrincipal\t: ServiceSpaceMultimedia[] = [];\r\n  \r\n  Lista_InfoServiceSpaceItems\t: ServiceSpaceItems[][] = [];\r\n  Lista_InfoRoomSpaceItems : RoomSpaceItems[][] = [];\r\n  Lista_InfoServiceSpaceBenefit\t: ServiceSpaceBenefit[][] = [];\r\n  Lista_InfoServiceSpaceMultimedia\t: ServiceSpaceMultimedia[][] = [];\r\n  Lista_InfoServiceSpaceContract\t: ServiceSpaceContract[][] = [];\r\n\r\n  multimediaType : MultimediaType[] = [];\r\n\r\n  constructor(\r\n    private http:HttpClient,\r\n    private cacheManager: CacheStorageService, \r\n    private storage: StorageServiceService, \r\n    \r\n    private genStorageServ : GenericStorageService<Service>,\r\n    private genStorageServiceName : GenericStorageService<ServiceName>,\r\n    private genStorageCoordinate : GenericStorageService<Coordinate>,\r\n    private genStorageCoWorkingSpace : GenericStorageService<CoWorkingSpace[]>,\r\n    private genStorageAccommodationSpace : GenericStorageService<AccommodationSpace[]>,\r\n    private genStorageHotelSpace : GenericStorageService<HotelSpace[]>,\r\n    private genStorageClasificacionHotel : GenericStorageService<number>,\r\n    private genStorageExclusivenessType : GenericStorageService<ExclusivenessType[]>,\r\n    private genStorageSpaceType : GenericStorageService<SpaceType[]>,\r\n\r\n    private genStorageServiceTransport : GenericStorageService<ServiceTransport[]>,\r\n    private genStorageServiceAttractions : GenericStorageService<ServiceAttractions[]>,\r\n    private genStorageServiceSchedule : GenericStorageService<ServiceSchedule[]>,\r\n    private genStorageServiceAditionals : GenericStorageService<ServiceAditionals[]>,\r\n    private genStorageServiceBenefit : GenericStorageService<ServiceBenefit[]>,\r\n    private genStorageRoomSpace : GenericStorageService<RoomSpace[]>,\r\n    private genStorageServiceSpaceMultimediaPrincipal : GenericStorageService<ServiceSpaceMultimedia[]>,\r\n    \r\n    private genStorageServiceSpaceItems : GenericStorageService<ServiceSpaceItems[]>,\r\n    private genStorageRoomSpaceItems : GenericStorageService<RoomSpaceItems[]>,\r\n    private genStorageServiceSpaceBenefit : GenericStorageService<ServiceSpaceBenefit[]>,\r\n    private genStorageServiceSpaceMultimedia : GenericStorageService<ServiceSpaceMultimedia[]>,\r\n    private genStorageServiceSpaceContract : GenericStorageService<ServiceSpaceContract[]>\r\n  ) {}\r\n\r\n  public Create(nombreTipoServicio : string) : Observable<RegisterResponse>\r\n  {\r\n      this.NombreTipoServicio = nombreTipoServicio;\r\n      switch(this.NombreTipoServicio)\r\n      {\r\n        case \"CoWorking\":\r\n          return this.RegistrarCoWorking();\r\n          break;\r\n        case \"Alojamiento\":\r\n          return this.RegistrarAlojamiento();\r\n          break;\r\n        case \"Hotel\":\r\n          return this.RegistrarHotel();\r\n          break;\r\n      }\r\n  }\r\n\r\n  public BorrarInformacionMemoria()\r\n  {\r\n    var valueEmpty : null;\r\n    this.genStorageServ.removeInformation(\"InfoService_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceName.removeInformation(\"InfoServiceName_\" + this.NombreTipoServicio);\r\n    this.genStorageCoordinate.removeInformation(\"InfoCoordinate_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceTransport.removeInformation(\"InfoServiceTransport_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceAttractions.removeInformation(\"InfoServiceAttractions_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceSchedule.removeInformation(\"InfoServiceSchedule_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceAditionals.removeInformation(\"InfoServiceAditionals_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceBenefit.removeInformation(\"InfoServiceBenefit_\" + this.NombreTipoServicio);\r\n    this.genStorageServiceSpaceMultimediaPrincipal.removeInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_99999\");\r\n\r\n    var indexServiceSpace = 0;\r\n\r\n    if(this.NombreTipoServicio == \"CoWorking\")\r\n    {\r\n        this.InfoCoWorkingSpace\t= this.genStorageCoWorkingSpace.getInformation(\"InfoCoWorkingSpace\");\r\n        this.InfoCoWorkingSpace.forEach(element => \r\n        {\r\n            this.BorrarInformacionServicios(indexServiceSpace);\r\n            indexServiceSpace++;\r\n        });\r\n        this.genStorageCoWorkingSpace.removeInformation(\"InfoCoWorkingSpace\");\r\n    }\r\n    else if(this.NombreTipoServicio == \"Alojamiento\")\r\n    {\r\n        this.genStorageExclusivenessType.removeInformation(\"InfoExclusivenessType_Alojamiento\");\r\n        this.genStorageSpaceType.removeInformation(\"InfoSpaceType_Alojamiento\");\r\n\r\n        this.InfoAccommodationSpace\t= this.genStorageAccommodationSpace.getInformation(\"InfoAccommodationSpace\");\r\n        this.InfoAccommodationSpace.forEach(element => \r\n        {\r\n            this.BorrarInformacionServicios(indexServiceSpace);\r\n            indexServiceSpace++;\r\n        });\r\n        \r\n        var indexRoomSpace = 0;\r\n        if(this.InfoRoomSpace != null && this.InfoRoomSpace.length > 0)\r\n        {\r\n            this.InfoRoomSpace.forEach(element =>\r\n            {\r\n                this.genStorageRoomSpaceItems.removeInformation(\"InfoRoomSpaceItems_\" + this.NombreTipoServicio + \"_\" + indexRoomSpace);\r\n                indexRoomSpace++;\r\n            })\r\n        }\r\n        this.genStorageRoomSpace.removeInformation(\"InfoRoomSpace_\" + this.NombreTipoServicio);\r\n\r\n        this.genStorageAccommodationSpace.removeInformation(\"InfoAccommodationSpace\");\r\n    }\r\n    else if(this.NombreTipoServicio == \"Hotel\")\r\n    {\r\n        this.genStorageClasificacionHotel.removeInformation(\"ClasificacionHotel\");\r\n\r\n        this.InfoHotelSpace\t= this.genStorageAccommodationSpace.getInformation(\"InfoHotelSpace\");\r\n        this.InfoHotelSpace.forEach(element => \r\n        {\r\n            this.BorrarInformacionServicios(indexServiceSpace);\r\n            indexServiceSpace++;\r\n        });\r\n\r\n        var indexRoomSpace = 0;\r\n        if(this.InfoRoomSpace != null && this.InfoRoomSpace.length > 0)\r\n        {\r\n          this.InfoRoomSpace.forEach(element =>\r\n            {\r\n                this.genStorageRoomSpaceItems.removeInformation(\"InfoRoomSpaceItems_\" + this.NombreTipoServicio + \"_\" + indexRoomSpace);\r\n                indexRoomSpace++;\r\n            })\r\n        }\r\n\r\n        this.genStorageRoomSpace.removeInformation(\"InfoRoomSpace_\" + this.NombreTipoServicio);\r\n        this.genStorageHotelSpace.removeInformation(\"InfoHotelSpace\");\r\n    }\r\n  }  \r\n\r\n  public ImageLoader(ServiceIndex: number, NombreTipoServicio : string, Imageb64 : string): Observable<ImageResponse>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      ServiceIndex        : ServiceIndex.toString(),\r\n      NombreTipoServicio  : NombreTipoServicio,\r\n      Imageb64            : Imageb64\r\n    };\r\n\r\n  \treturn this.http.put<ImageResponse>(this.UrlImage,consulta,{headers:headers});\r\n  }\r\n\r\n  private BorrarInformacionServicios(indexServiceSpace : number)\r\n  {\r\n        this.genStorageServiceSpaceItems.removeInformation(\"InfoServiceSpaceItems_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n        this.genStorageServiceSpaceBenefit.removeInformation(\"InfoServiceSpaceBenefit_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n        this.genStorageServiceSpaceMultimedia.removeInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n        this.genStorageServiceSpaceContract.removeInformation(\"InfoServiceSpaceContract_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n  }\r\n\r\n  private RegistrarCoWorking(): Observable<RegisterResponse>\r\n  {\r\n    this.CargarInformacionMemoria();\r\n\r\n  \tconst headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId  : this.storage.getCurrentApplication(),\r\n      IdUser         : this.storage.getCurrentUser().IdUser,\r\n      Token          : this.storage.getCurrentToken(),\r\n      InfoService           : this.InfoService,\r\n      InfoServiceName       : this.InfoServiceName,\r\n      InfoCoordinate        : this.InfoCoordinate,\r\n      InfoCoWorkingSpace    : this.InfoCoWorkingSpace,\r\n      InfoServiceTransport  : this.InfoServiceTransport,\r\n      InfoServiceSchedule   : this.InfoServiceSchedule,\r\n      InfoServiceAditionals : this.InfoServiceAditionals,\r\n      InfoServiceBenefit    : this.InfoServiceBenefit,\r\n      InfoServiceSpaceMultimediaPrincipal : this.InfoServiceSpaceMultimediaPrincipal,\r\n      InfoServiceSpaceItems         : this.Lista_InfoServiceSpaceItems,\r\n      InfoServiceSpaceBenefit       : this.Lista_InfoServiceSpaceBenefit,\r\n      InfoServiceSpaceMultimedia    : this.Lista_InfoServiceSpaceMultimedia,\r\n      InfoServiceSpaceContract      : this.Lista_InfoServiceSpaceContract,\r\n    };\r\n  \r\n    return this.http.put<RegisterResponse>(this.UrlRegistroCoWorking,consulta,{headers:headers});\r\n  }\r\n\r\n  private RegistrarAlojamiento(): Observable<RegisterResponse>\r\n  {\r\n    this.CargarInformacionMemoria();\r\n\r\n  \tconst headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId  : this.storage.getCurrentApplication(),\r\n      IdUser         : this.storage.getCurrentUser().IdUser,\r\n      Token          : this.storage.getCurrentToken(),\r\n      InfoService                 : this.InfoService,\r\n      InfoServiceName             : this.InfoServiceName,\r\n      InfoCoordinate              : this.InfoCoordinate,\r\n      InfoAccommodationSpace      : this.InfoAccommodationSpace,\r\n      InfoServiceTransport        : this.InfoServiceTransport,\r\n      InfoServiceSchedule         : this.InfoServiceSchedule,\r\n      InfoServiceAditionals       : this.InfoServiceAditionals,\r\n      InfoServiceBenefit          : this.InfoServiceBenefit,\r\n      InfoRoomSpace               : this.InfoRoomSpace,\r\n      InfoServiceSpaceItems       : this.Lista_InfoServiceSpaceItems,\r\n      InfoRoomSpaceItems\t        : this.Lista_InfoRoomSpaceItems,\r\n      InfoServiceSpaceBenefit     : this.Lista_InfoServiceSpaceBenefit,\r\n      InfoServiceSpaceMultimedia  : this.Lista_InfoServiceSpaceMultimedia,\r\n      InfoServiceSpaceContract    : this.Lista_InfoServiceSpaceContract,\r\n    };\r\n  \r\n    return this.http.put<RegisterResponse>(this.UrlRegistroAlojamiento,consulta,{headers:headers});\r\n  }\r\n\r\n  private RegistrarHotel(): Observable<RegisterResponse>\r\n  {\r\n    debugger;\r\n    this.CargarInformacionMemoria();\r\n\r\n  \tconst headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId  : this.storage.getCurrentApplication(),\r\n      IdUser         : this.storage.getCurrentUser().IdUser,\r\n      Token          : this.storage.getCurrentToken(),\r\n      InfoService                 : this.InfoService,\r\n      InfoServiceName             : this.InfoServiceName,\r\n      InfoCoordinate              : this.InfoCoordinate,\r\n      InfoHotelSpace              : this.InfoHotelSpace,\r\n      InfoServiceTransport        : this.InfoServiceTransport,\r\n      InfoServiceAttractions      : this.InfoServiceAttractions,\r\n      InfoServiceSchedule         : this.InfoServiceSchedule,\r\n      InfoServiceAditionals       : this.InfoServiceAditionals,\r\n      InfoServiceBenefit          : this.InfoServiceBenefit,\r\n      InfoRoomSpace               : this.InfoRoomSpace,\r\n      InfoServiceSpaceMultimediaPrincipal : this.InfoServiceSpaceMultimediaPrincipal,\r\n      InfoServiceSpaceItems       : this.Lista_InfoServiceSpaceItems,\r\n      InfoRoomSpaceItems\t        : this.Lista_InfoRoomSpaceItems,\r\n      InfoServiceSpaceBenefit     : this.Lista_InfoServiceSpaceBenefit,\r\n      InfoServiceSpaceMultimedia  : this.Lista_InfoServiceSpaceMultimedia,\r\n      InfoServiceSpaceContract    : this.Lista_InfoServiceSpaceContract,\r\n    };\r\n  \r\n    return this.http.put<RegisterResponse>(this.UrlRegistroHotel,consulta,{headers:headers});\r\n  }\r\n\r\n\r\n  private CargarInformacionMemoria()\r\n  {\r\n    this.InfoService = this.genStorageServ.getInformation(\"InfoService_\" + this.NombreTipoServicio);\r\n    this.InfoServiceName = this.genStorageServiceName.getInformation(\"InfoServiceName_\" + this.NombreTipoServicio);\r\n    this.InfoCoordinate\t= this.genStorageCoordinate.getInformation(\"InfoCoordinate_\" + this.NombreTipoServicio);\r\n    this.InfoCoWorkingSpace\t= this.genStorageCoWorkingSpace.getInformation(\"InfoCoWorkingSpace\");\r\n    this.InfoAccommodationSpace\t= this.genStorageAccommodationSpace.getInformation(\"InfoAccommodationSpace\");\r\n    this.InfoHotelSpace\t= this.genStorageHotelSpace.getInformation(\"InfoHotelSpace\");\r\n\r\n    this.InfoServiceTransport\t= this.genStorageServiceTransport.getInformation(\"InfoServiceTransport_\" + this.NombreTipoServicio);\r\n    this.InfoServiceAttractions\t= this.genStorageServiceAttractions.getInformation(\"InfoServiceAttractions_\" + this.NombreTipoServicio);\r\n    this.InfoServiceSchedule\t= this.genStorageServiceSchedule.getInformation(\"InfoServiceSchedule_\" + this.NombreTipoServicio);\r\n    this.InfoServiceAditionals\t= this.genStorageServiceAditionals.getInformation(\"InfoServiceAditionals_\" + this.NombreTipoServicio);\r\n    this.InfoServiceBenefit = this.genStorageServiceBenefit.getInformation(\"InfoServiceBenefit_\" + this.NombreTipoServicio);\r\n    this.InfoRoomSpace = this.genStorageRoomSpace.getInformation(\"InfoRoomSpace_\" + this.NombreTipoServicio);\r\n  \r\n    this.cacheManager.getData<MultimediaType>(\"MultimediaType\", (array : MultimediaType[]) => { this.multimediaType = array; });    \r\n\r\n    var limiteTipoServicio = (this.NombreTipoServicio == \"CoWorking\") ? this.InfoCoWorkingSpace.length : \r\n                            (this.NombreTipoServicio == \"Alojamiento\" ? this.InfoAccommodationSpace.length : \r\n                            (this.NombreTipoServicio == \"Hotel\" ? this.InfoHotelSpace.length : 0));\r\n    \r\n    var indexServiceSpace = 0;\r\n    for(indexServiceSpace = 0;indexServiceSpace < limiteTipoServicio; indexServiceSpace++)\r\n    {\r\n        var InfoServiceSpaceItems\t= this.genStorageServiceSpaceItems.getInformation(\"InfoServiceSpaceItems_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n        this.Lista_InfoServiceSpaceItems.push(InfoServiceSpaceItems);\r\n\r\n        var InfoServiceSpaceBenefit\t= this.genStorageServiceSpaceBenefit.getInformation(\"InfoServiceSpaceBenefit_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n        this.Lista_InfoServiceSpaceBenefit.push(InfoServiceSpaceBenefit);\r\n\r\n        if(this.NombreTipoServicio == \"CoWorking\" || this.NombreTipoServicio == \"Alojamiento\")\r\n        {\r\n            var InfoServiceSpaceMultimedia\t= this.genStorageServiceSpaceMultimedia.getInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n            if(this.multimediaType && this.multimediaType != null && InfoServiceSpaceMultimedia != null)\r\n            {\r\n                var typeImage = this.multimediaType.find(x=>x.Name.toUpperCase() == \"IMAGEN\")\r\n                InfoServiceSpaceMultimedia.forEach(imagen =>\r\n                {\r\n                    imagen.IdMultimediaType = (typeImage && typeImage != null) ? typeImage.IdMultimediaType : null;\r\n                });\r\n            }\r\n            this.Lista_InfoServiceSpaceMultimedia.push(InfoServiceSpaceMultimedia);\r\n\r\n            var InfoServiceSpaceContract = this.genStorageServiceSpaceContract.getInformation(\"InfoServiceSpaceContract_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n            this.Lista_InfoServiceSpaceContract.push(InfoServiceSpaceContract);\r\n        }\r\n    }\r\n\r\n    if(this.NombreTipoServicio == \"Hotel\")\r\n    {\r\n        this.Lista_InfoServiceSpaceMultimedia = [];\r\n        this.Lista_InfoServiceSpaceContract = [];\r\n    }\r\n\r\n    this.InfoServiceSpaceMultimediaPrincipal = this.genStorageServiceSpaceMultimediaPrincipal.getInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_99999\");\r\n    if(this.multimediaType && this.multimediaType != null && this.InfoServiceSpaceMultimediaPrincipal != null && this.InfoServiceSpaceMultimediaPrincipal.length > 0)\r\n    {\r\n        var typeImage = this.multimediaType.find(x=>x.Name.toUpperCase() == \"IMAGEN\")\r\n        this.InfoServiceSpaceMultimediaPrincipal.forEach(imagen =>\r\n        {\r\n            imagen.IdMultimediaType = (typeImage && typeImage != null) ? typeImage.IdMultimediaType : null;\r\n        });\r\n    }\r\n\r\n    indexServiceSpace = 0;\r\n    if(this.InfoRoomSpace != null && this.InfoRoomSpace.length > 0)\r\n    {\r\n        this.InfoRoomSpace.forEach(room =>\r\n        {\r\n            var InfoRoomSpaceItems = this.genStorageRoomSpaceItems.getInformation(\"InfoRoomSpaceItems_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n            this.Lista_InfoRoomSpaceItems.push(InfoRoomSpaceItems);\r\n\r\n            if(this.NombreTipoServicio == \"Hotel\")\r\n            {\r\n                var InfoServiceSpaceMultimedia\t= this.genStorageServiceSpaceMultimedia.getInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n                if(this.multimediaType && this.multimediaType != null && InfoServiceSpaceMultimedia != null)\r\n                {\r\n                    var typeImage = this.multimediaType.find(x=>x.Name.toUpperCase() == \"IMAGEN\")\r\n                    InfoServiceSpaceMultimedia.forEach(imagen =>\r\n                    {\r\n                        imagen.IdMultimediaType = (typeImage && typeImage != null) ? typeImage.IdMultimediaType : null;\r\n                    });\r\n                }\r\n                this.Lista_InfoServiceSpaceMultimedia.push(InfoServiceSpaceMultimedia);\r\n\r\n                var InfoServiceSpaceContract = this.genStorageServiceSpaceContract.getInformation(\"InfoServiceSpaceContract_\" + this.NombreTipoServicio + \"_\" + indexServiceSpace);\r\n                this.Lista_InfoServiceSpaceContract.push(InfoServiceSpaceContract);\r\n            }\r\n\r\n            indexServiceSpace++;\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport { CacheStorageService } from '../services/cachestorage.service';\r\nimport { StorageServiceService } from '../services/storage-service.service';\r\nimport { GenericStorageService } from '../services/genericstorage.service';\r\n\r\nimport { Service } from '../modelos/service.model';\r\nimport { CoWorkingSpace } from '../modelos/coworkingspace.model';\r\nimport { ServiceSpaceItems } from '../modelos/ServiceSpaceItems.model';\r\nimport { ServiceSpaceContract } from '../modelos/servicespacecontact.model';\r\nimport { ServiceBenefit } from '../modelos/servicebenefit.model';\r\nimport { ServiceSpaceMultimedia } from '../modelos/servicespacemultimedia.model';\r\nimport { ServiceTransport } from '../modelos/servicetransport.model';\r\nimport { ServiceSchedule } from '../modelos/serviceschedule.model';\r\nimport { ServiceAditionals } from '../modelos/serviceaditionals.model';\r\nimport { ServiceSpaceBenefit } from '../modelos/servicespacebenefit.model';\r\nimport { Coordinate } from '../modelos/coordinate.model';\r\nimport { RegisterResponse } from '../modelos/Response/RegisterResponse.model';\r\nimport { MultimediaType } from '../modelos/multimediatype.model';\r\nimport {UrlBackendServices} from './AppServiceGlobal';\r\nimport { ImageResponse } from '../modelos/Response/ImageResponse.model';\r\nimport { AccommodationSpace } from '../modelos/accommodationspace.model';\r\nimport { ExclusivenessType } from '../modelos/exclusivenesstype.model';\r\nimport { SpaceType } from '../modelos/spacetype.model';\r\nimport { RoomSpaceItems } from '../modelos/RoomSpaceItems.model';\r\nimport { RoomSpace } from '../modelos/RoomSpace.model';\r\nimport { HotelSpace } from '../modelos/hotelspace.model';\r\nimport { BasicInformation } from '../modelos/BasicInformation.model';\r\nimport { GenericResponse } from '../modelos/Response/GenericResponse.model';\r\nimport { SimpleGenericResponse } from '../modelos/Response/SimpleGenericResponse.model';\r\nimport { ServiceFavorite } from '../modelos/servicefavorite.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SearchServiceService\r\n{\r\n  UrlSearch = UrlBackendServices + \"/api/Search\";\r\n  UrlBasic = UrlBackendServices + \"/api/\";\r\n\r\n  constructor( private http:HttpClient, private storage: StorageServiceService) {}\r\n\r\n  public Buscar(isCW: boolean, isHT: boolean, isAC: boolean): Observable<GenericResponse<BasicInformation>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      IsCoWorking         : isCW,\r\n      IsHotel             : isHT,\r\n      IsAccommodation     : isAC\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<BasicInformation>>(this.UrlSearch,consulta,{headers:headers});\r\n  }\r\n\r\n  public BuscarCoWorking(filters: any): Observable<GenericResponse<BasicInformation>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      IsCoWorking         : true,\r\n      IsHotel             : false,\r\n      IsAccommodation     : false,\r\n      PageIndex           : filters.Paginacion,\r\n      CoWorkingFilters    : \r\n      {\r\n          MinValue              : filters.Minimo,\r\n          MaxValue              : filters.Maximo,\r\n          City                  : filters.Ciudad,\r\n          IdCountry             : filters.IdCountry,\r\n          ContractTypeList      : filters.InfoContractType,\r\n          SpaceTypeList         : filters.InfoSpaceType\r\n      }\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<BasicInformation>>(this.UrlSearch,consulta,{headers:headers});\r\n  }\r\n\r\n  public BuscarAlojamiento(filters: any): Observable<GenericResponse<BasicInformation>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      IsCoWorking         : false,\r\n      IsHotel             : false,\r\n      IsAccommodation     : true,\r\n      PageIndex           : filters.Paginacion,\r\n      AccommodationFilters: \r\n      {\r\n          MinValue              : filters.Minimo,\r\n          MaxValue              : filters.Maximo,\r\n          City                  : filters.Ciudad,\r\n          IdCountry             : filters.IdCountry,\r\n          ContractTypeList      : filters.InfoContractType,\r\n          AccommodationSpaceTypeList: filters.InfoAccommodationSpaceType\r\n      }\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<BasicInformation>>(this.UrlSearch,consulta,{headers:headers});\r\n  }\r\n\r\n  public BuscarHotel(filters: any): Observable<GenericResponse<BasicInformation>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      IsCoWorking         : false,\r\n      IsHotel             : true,\r\n      IsAccommodation     : false,\r\n      PageIndex           : filters.Paginacion,\r\n      HotelFilters: \r\n      {\r\n          MinValue              : filters.Minimo,\r\n          MaxValue              : filters.Maximo,\r\n          City                  : filters.Ciudad,\r\n          IdCountry             : filters.IdCountry,\r\n          ContractTypeList      : filters.InfoContractType,\r\n          SpaceTypeList         : filters.InfoSpaceType\r\n      }\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<BasicInformation>>(this.UrlSearch,consulta,{headers:headers});\r\n  }\r\n\r\n  public AgregarFavoritos(paramServiceFavorite : ServiceFavorite): Observable<RegisterResponse> \r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      Parameters          :\r\n      {\r\n        TypeService       : paramServiceFavorite.TypeService,\r\n        IdService         : paramServiceFavorite.IdService,\r\n        IdUser            : this.storage.getCurrentUser().IdUser,\r\n        IsFavorite        : paramServiceFavorite.IsFavorite\r\n      }\r\n    };\r\n\r\n    return this.http.put<RegisterResponse>(this.UrlBasic + \"ServiceFavorite\", consulta, {headers:headers});\r\n  }\r\n\r\n  public ConsultarMisFavoritos(): Observable<GenericResponse<BasicInformation>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken()\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<BasicInformation>>(this.UrlBasic + \"ServiceFavorite\", consulta, {headers:headers});\r\n  }\r\n\r\n  public MisPublicaciones(isCW: boolean, isHT: boolean, isAC: boolean): Observable<GenericResponse<BasicInformation>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = \r\n    {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      IdUser              : this.storage.getCurrentUser().IdUser,\r\n      Token               : this.storage.getCurrentToken(),\r\n      IsCoWorking         : isCW,\r\n      IsHotel             : isHT,\r\n      IsAccommodation     : isAC,\r\n      CoWorkingFilters    : { IdUser: this.storage.getCurrentUser().IdUser },\r\n      HotelFilters        : { IdUser: this.storage.getCurrentUser().IdUser },\r\n      AccommodationFilters: { IdUser: this.storage.getCurrentUser().IdUser }\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<BasicInformation>>(this.UrlSearch,consulta,{headers:headers});\r\n  }\r\n\r\n  public GetDetailsInfo<T>(controllerName: string, IdServicio: string, Command: string = null, IdServiceType: string = null, IdServiceSpace: string = null) : Observable<GenericResponse<T>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = \r\n    {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      Token               : this.storage.getCurrentToken(),\r\n      IdService           : IdServicio,\r\n      IdServiceType       : IdServiceType,\r\n      IdServiceSpace      : IdServiceSpace,\r\n      Command             : Command\r\n    };\r\n\r\n  \treturn this.http.post<GenericResponse<T>>(this.UrlBasic + controllerName, consulta, {headers:headers});\r\n  }\r\n\r\n  public GetDetailInfo<T>(controllerName: string, IdServicio: string, Command: string = null, IdServiceType: string = null, IdServiceSpace: string = null) : Observable<SimpleGenericResponse<T>>\r\n  {\r\n    const headers = new HttpHeaders({\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin': '*'});\r\n    const consulta = \r\n    {\r\n      ApplicationId       : this.storage.getCurrentApplication(),\r\n      Token               : this.storage.getCurrentToken(),\r\n      IdService           : IdServicio,\r\n      IdServiceType       : IdServiceType,\r\n      IdServiceSpace      : IdServiceSpace,\r\n      Command             : Command\r\n    };\r\n\r\n  \treturn this.http.post<SimpleGenericResponse<T>>(this.UrlBasic + controllerName, consulta, {headers:headers});\r\n  }\r\n}\r\n","module.exports = \"<p  *ngFor=\\\"let alert of alerts\\\">\\r\\n    <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n</p>\"","import { debounceTime } from 'rxjs/operators';\r\nimport { Input, Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-alerta',\r\n  templateUrl: './alerta.component.html',\r\n  styles: [`\r\n    :host >>> .alert-custom {\r\n      color: #99004d;\r\n      background-color: #f169b4;\r\n      border-color: #800040;\r\n    }\r\n  `]\r\n})\r\nexport class AlertaComponent implements OnInit {\r\n\r\n   @Input() public alerts: Array<IAlert> = [];\r\n   private backup: Array<IAlert>;\r\n  constructor() {\r\n  \r\n    this.backup = this.alerts.map((alert: IAlert) => Object.assign({}, alert));\r\n   } \r\n     private _success = new Subject<string>();\r\n\r\n    staticAlertClosed = false;\r\n    successMessage: string;\r\n\r\n   ngOnInit(): void {\r\n    setTimeout(() => (this.staticAlertClosed = true), 5);\r\n\r\n    this._success.subscribe(message => (this.successMessage = message));\r\n    this._success.pipe(debounceTime(5000)).subscribe(() => (this.successMessage = null));\r\n  }\r\n\r\n   public closeAlert(alert: IAlert) {\r\n    const index: number = this.alerts.indexOf(alert);\r\n    this.alerts.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport interface IAlert {\r\n  id: number;\r\n  type: string;\r\n  message: string;\r\n}\r\n\r\n","module.exports = \"<a class=\\\"BotonRegresar\\\" href=\\\"javascript:void(0)\\\">\\r\\n    <i class=\\\"mdi mdi-keyboard-backspace\\\" style=\\\"font-size: 30px;\\\"></i>\\r\\n</a>\"","import { Input, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-BackButton',\r\n  templateUrl: './BackButton.component.html'\r\n})\r\nexport class BackButtonComponent implements OnInit \r\n{\r\n    constructor() {} \r\n     \r\n    ngOnInit(): void \r\n    {\r\n    }\r\n}","module.exports = \"<div *ngFor=\\\"let itemList of InfoGenericList\\\" class=\\\"card-body optionItem\\\">\\r\\n    <div class=\\\"row p-b-5\\\" (click)=\\\"AgregarEnListaFinal(itemList);\\\">\\r\\n        <div class=\\\"col-10\\\">\\r\\n            <h4 class=\\\"card-title\\\">{{itemList.Name}}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n            <div [ngClass]=\\\"{'active': (itemList.Checked == true), 'inactive' : (itemList.Checked == false)}\\\" class=\\\"image-options-list\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"itemList.Checked && Configuration.AdditionalFieldType != ''\\\"  class=\\\"row p-b-15\\\" >\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': (itemList.AdditionalField == '')}\\\" value=\\\"{{itemList.AdditionalField}}\\\"\\r\\n                    type=\\\"{{Configuration.AdditionalFieldType}}\\\" placeholder=\\\"{{Configuration.AdditionalFieldLabel}}\\\" class=\\\"form-control form-control-sm\\\" \\r\\n                    (change)=\\\"ModificarInfoAdicional(itemList, $event.srcElement.value);\\\">\\r\\n            <span class=\\\"LabelOblitaorio\\\" style=\\\"top:-23px;\\\">*</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr class=\\\"m-t-0\\\">\\r\\n</div>\"","import { Input, Output, Component, OnInit} from '@angular/core';\r\nimport { CacheStorageService } from './../../services/cachestorage.service';\r\nimport { GenericStorageService } from 'src/app/services/genericstorage.service';\r\nimport { AnimationRendererFactory } from '@angular/platform-browser/animations/src/animation_renderer';\r\n\r\n@Component({\r\n  selector: 'app-listaseleccion',\r\n  templateUrl: './ListaSeleccion.component.html',\r\n  styleUrls: ['./ListaSeleccion.scss']\r\n})\r\n\r\nexport class ListaSeleccionComponent<T,U> implements OnInit\r\n{\r\n    InfoStorageEntity : any[] = [];\r\n    InfoGenericList : StructList[] = []\r\n\r\n    @Input() Configuration: any\r\n\r\n    constructor(private cacheManager: CacheStorageService,\r\n      private genStorageTrans : GenericStorageService<T[]>)\r\n    {\r\n    }\r\n\r\n    ngOnInit() \r\n    {\r\n        this.InfoStorageEntity = this.genStorageTrans.getInformation(this.Configuration.StorageKey);\r\n        if(!this.InfoStorageEntity || this.InfoStorageEntity == null)\r\n            this.InfoStorageEntity = [];\r\n\r\n        this.cacheManager.getData<U>(this.Configuration.MasterEntityName, (array : U[]) => \r\n        {\r\n            if(this.Configuration.Filters && this.Configuration.Filters != null && this.Configuration.Filters.length > 0)\r\n            {\r\n                var arrayAux : U[] = [];\r\n\r\n                for(var contFilter = 0; contFilter < this.Configuration.Filters.length; contFilter++)\r\n                {\r\n                    for(var cont = 0; cont < array.length; cont++)\r\n                    {\r\n                        if(array[cont][this.Configuration.Filters[contFilter].field] == this.Configuration.Filters[contFilter].value)\r\n                        {\r\n                            arrayAux.push(array[cont]);\r\n                        }  \r\n                    }\r\n\r\n                    if(!this.Configuration.FiltersOperator || this.Configuration.FiltersOperator != \"OR\")\r\n                    {\r\n                        array = arrayAux;                        \r\n                    }\r\n                }\r\n\r\n                array = arrayAux;\r\n            }\r\n\r\n            var countTransportType = 0;\r\n            array.forEach(type => \r\n            {\r\n                var indexListaGuardada = this.InfoStorageEntity.findIndex(x => x[this.Configuration.NameFieldId] == type[this.Configuration.NameFieldId]);\r\n                this.InfoGenericList.push(\r\n                {\r\n                    Id :          type[this.Configuration.NameFieldId],\r\n                    Name :        type[\"Name\"],\r\n                    Checked :     (indexListaGuardada != -1),\r\n                    AdditionalField:  (this.Configuration.AdditionalFieldName != \"\" && indexListaGuardada != -1) ? this.InfoStorageEntity[indexListaGuardada][this.Configuration.AdditionalFieldName] : ''\r\n                });\r\n                countTransportType++;\r\n            });\r\n        });\r\n    }\r\n\r\n    private ModificarInfoAdicional(itemList :any, value : any)\r\n    {\r\n        itemList.AdditionalField = value;\r\n        var posArray = this.InfoStorageEntity.findIndex(x => x[this.Configuration.NameFieldId] == itemList.Id);\r\n        if(posArray != -1)\r\n        {\r\n          this.InfoStorageEntity[posArray][this.Configuration.AdditionalFieldName] = value;\r\n        }      \r\n\r\n        if(this.Configuration.EsGuardadoAutomatico)\r\n        {\r\n            this.GuardarAutomaticamenteEnStorage();\r\n        }\r\n    }\r\n\r\n    private AgregarEnListaFinal(itemList :any)\r\n    {\r\n        console.log(this.Configuration.NameFieldId + \": \", itemList);\r\n  \r\n        var isAdd : boolean = !itemList.Checked;\r\n        itemList.Checked = !itemList.Checked;\r\n  \r\n        if(isAdd)\r\n        {\r\n          if(this.Configuration.EsSeleccionUnica)\r\n          {\r\n            this.InfoGenericList.forEach(item => { item.Checked = false; });\r\n            this.InfoStorageEntity = [];\r\n            itemList.Checked = !itemList.Checked;\r\n          }\r\n\r\n          var infoGenEntity: any = [];\r\n          infoGenEntity[this.Configuration.NameFieldId] = itemList.Id;\r\n          if(this.Configuration.AdditionalFieldName != \"\")\r\n              infoGenEntity[this.Configuration.AdditionalFieldName] = itemList.AdditionalField;\r\n          \r\n          this.InfoStorageEntity.push(infoGenEntity)\r\n        }\r\n        else\r\n        {\r\n          var posArray = this.InfoStorageEntity.findIndex(x => x[this.Configuration.NameFieldId] == itemList.Id);\r\n          if(posArray != -1)\r\n          {\r\n            this.InfoStorageEntity.splice(posArray,1);\r\n          }      \r\n        }\r\n\r\n\r\n        if(this.Configuration.EsGuardadoAutomatico)\r\n        {\r\n            this.GuardarAutomaticamenteEnStorage();\r\n        }\r\n    }\r\n\r\n    public GuardarAutomaticamenteEnStorage()\r\n    {\r\n        var auxArray: T[] = [];\r\n        this.InfoStorageEntity.forEach((item) =>\r\n        {\r\n            var aux: any = {};\r\n            aux[this.Configuration.NameFieldId] = item[this.Configuration.NameFieldId];\r\n            aux[\"Name\"] = item[\"Name\"];\r\n            if(this.Configuration.AdditionalFieldName != \"\")\r\n            {\r\n              aux[this.Configuration.AdditionalFieldName] = item.AdditionalField;\r\n            }\r\n            auxArray.push(aux);\r\n        });\r\n        this.genStorageTrans.setInformation(this.Configuration.StorageKey,auxArray);\r\n    }\r\n\r\n    public ValidarDescripcionesDiligenciadas() : boolean\r\n    {\r\n        if(this.Configuration.AdditionalFieldName == \"\")\r\n            return true;\r\n\r\n        var result : boolean = true;\r\n        this.InfoStorageEntity.forEach(element => {\r\n          if(!element[this.Configuration.AdditionalFieldName] || element[this.Configuration.AdditionalFieldName] == \"\" || element[this.Configuration.AdditionalFieldName] == null)\r\n          {\r\n              result = false;\r\n              return;\r\n          }\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class StructList\r\n{\r\n  Id: string\r\n  Name : string\r\n  Checked : boolean\r\n  AdditionalField : string\r\n}","module.exports = \"th.ng2-smart-actions-title {\\n  display: none; }\\n\\n.card-body.optionItem {\\n  flex: 1 1 auto;\\n  padding: 1.25rem;\\n  padding-bottom: 00rem;\\n  padding-top: 20px; }\\n\\n.image-options-list {\\n  width: 30px !important;\\n  height: 30px !important;\\n  position: relative;\\n  left: 5px !important;\\n  top: -4px !important;\\n  background-size: contain !important; }\\n\\n.image-options-list.inactive {\\n  background: url('Yes_Check_Circle2.png'); }\\n\\n.image-options-list.active {\\n  background: url('Yes_Check_Circle1.png'); }\\n\\n@media (min-width: 767px) {\\n  .card-body.optionItem[_ngcontent-c5] {\\n    padding: 1.25rem;\\n    padding-bottom: 00rem;\\n    padding-top: 20px;\\n    width: 50%;\\n    display: inline-block; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbGlkYWRlcy9MaXN0YVNlbGVjY2lvbi9DOlxcQlJJQ0tTNFVTXFxCYWNrZW5kXFxicmlja3M0dXMvc3JjXFxhcHBcXHV0aWxpZGFkZXNcXExpc3RhU2VsZWNjaW9uXFxMaXN0YVNlbGVjY2lvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksYUFBYSxFQUFBOztBQUdqQjtFQUNJLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIscUJBQXFCO0VBQ3JCLGlCQUFpQixFQUFBOztBQUdyQjtFQUVJLHNCQUFxQjtFQUNyQix1QkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixvQkFBb0I7RUFDcEIsbUNBQW1DLEVBQUE7O0FBR3ZDO0VBRUksd0NBQStELEVBQUE7O0FBR25FO0VBRUksd0NBQStELEVBQUE7O0FBR25FO0VBRUk7SUFDSSxnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YscUJBQXFCLEVBQUEsRUFDeEIiLCJmaWxlIjoic3JjL2FwcC91dGlsaWRhZGVzL0xpc3RhU2VsZWNjaW9uL0xpc3RhU2VsZWNjaW9uLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aC5uZzItc21hcnQtYWN0aW9ucy10aXRsZVxyXG57XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY2FyZC1ib2R5Lm9wdGlvbkl0ZW0ge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgICBwYWRkaW5nOiAxLjI1cmVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDAwcmVtO1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5pbWFnZS1vcHRpb25zLWxpc3Rcclxue1xyXG4gICAgd2lkdGg6IDMwcHghaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAzMHB4IWltcG9ydGFudDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGxlZnQ6IDVweCAhaW1wb3J0YW50O1xyXG4gICAgdG9wOiAtNHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW4gIWltcG9ydGFudDtcclxufVxyXG5cclxuLmltYWdlLW9wdGlvbnMtbGlzdC5pbmFjdGl2ZVxyXG57XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi8uLi9hc3NldHMvaW1hZ2VzL1llc19DaGVja19DaXJjbGUyLnBuZ1wiKTtcclxufVxyXG5cclxuLmltYWdlLW9wdGlvbnMtbGlzdC5hY3RpdmVcclxue1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9ZZXNfQ2hlY2tfQ2lyY2xlMS5wbmdcIik7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweClcclxue1xyXG4gICAgLmNhcmQtYm9keS5vcHRpb25JdGVtW19uZ2NvbnRlbnQtYzVdIHtcclxuICAgICAgICBwYWRkaW5nOiAxLjI1cmVtO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwMHJlbTtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMjBweDtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxufSJdfQ== */\"","module.exports = \"<div class=\\\"col-xs-4\\\">\\r\\n    <div class=\\\"card mr-2\\\" style=\\\"width: 9rem; margin-left:.4em\\\">\\r\\n        <img (click)=\\\"VerDetalleServicio();\\\" src=\\\"{{basicInformation.Image}}\\\" width=\\\"120\\\" height=\\\"80\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h6 class=\\\"card-title\\\">\\r\\n                <app-agregarfavoritos class=\\\"BotonFavoritos Basic\\\" [parameterfavorito]=\\\"favorito\\\"></app-agregarfavoritos>\\r\\n                <span (click)=\\\"VerDetalleServicio();\\\">{{basicInformation.Title}}</span>\\r\\n            </h6>\\r\\n            <h6 (click)=\\\"VerDetalleServicio();\\\" class=\\\"value-field\\\">{{basicInformation.Value}}</h6>\\r\\n            <h6 (click)=\\\"VerDetalleServicio();\\\" class=\\\"location-field\\\">{{basicInformation.City}} - {{basicInformation.Country}}</h6>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Input, Output, Component, ViewChild, OnInit} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CacheStorageService } from './../../services/cachestorage.service';\r\nimport { GenericStorageService } from 'src/app/services/genericstorage.service';\r\nimport { AnimationRendererFactory } from '@angular/platform-browser/animations/src/animation_renderer';\r\nimport { BasicInformation } from 'src/app/modelos/BasicInformation.model';\r\nimport { ServiceFavorite } from 'src/app/modelos/servicefavorite.model';\r\nimport { AgregarfavoritosComponent } from '../agregarfavoritos/agregarfavoritos.component';\r\nimport { SearchServiceService } from 'src/app/services/Search-service.service';\r\n\r\n@Component({\r\n  selector: 'app-ServiceBasicView',\r\n  templateUrl: './ServiceBasicView.component.html',\r\n  styleUrls: ['./ServiceBasicView.scss']\r\n})\r\n\r\nexport class ServiceBasicViewComponent implements OnInit\r\n{\r\n    @Input() basicInformation: BasicInformation;\r\n    DefaultImageUrl: string;\r\n    \r\n    favorito : ServiceFavorite;\r\n    @ViewChild(AgregarfavoritosComponent) compCalificacion: AgregarfavoritosComponent;\r\n\r\n    constructor(\r\n      private router:Router,\r\n      private servicePublicaciones: SearchServiceService,\r\n      private genStorageFavoritos : GenericStorageService<ServiceFavorite[]>)\r\n    {\r\n      this.DefaultImageUrl = \"assets/images/background/SinImagen.png\";\r\n    }\r\n\r\n    ngOnInit() \r\n    {\r\n      if( this.basicInformation != null && this.basicInformation.Image != null)\r\n      {\r\n          var aux: string = this.basicInformation.Image;\r\n          aux = aux.replace(\"thumbnail\",\"mediana\");\r\n          aux = \"http://bricks4us.azurewebsites.net/\" + aux;\r\n          this.basicInformation.Image = aux;\r\n      }\r\n      else if (this.basicInformation.Image == null)\r\n      {\r\n        this.basicInformation.Image = this.DefaultImageUrl;\r\n      }\r\n\r\n      this.favorito = new ServiceFavorite();\r\n      this.favorito.IdService = this.basicInformation.IdService;\r\n      this.favorito.TypeService = this.basicInformation.ServiceType;\r\n      this.compCalificacion = new AgregarfavoritosComponent(this.servicePublicaciones, this.genStorageFavoritos);\r\n    }\r\n\r\n    VerDetalleServicio()   \r\n    {\r\n        //if(this.basicInformation.ServiceType != \"CoWorking\")\r\n            this.router.navigate([\"/VistaServicio/\" + this.basicInformation.ServiceType + \"/\" + this.basicInformation.IdService]);\r\n    }\r\n}","module.exports = \"th.ng2-smart-actions-title {\\n  display: none; }\\n\\n.card-body {\\n  flex: 1 1 auto;\\n  padding: 0.25rem;\\n  padding-bottom: 00rem;\\n  padding-top: 10px; }\\n\\n.card .card-title {\\n  position: relative;\\n  font-weight: 600;\\n  margin-bottom: 3px;\\n  font-size: 14px; }\\n\\n.card .value-field {\\n  position: relative;\\n  font-weight: 400;\\n  margin-bottom: 3px;\\n  font-size: 12px; }\\n\\n.card .location-field {\\n  position: relative;\\n  font-weight: 400;\\n  margin-bottom: 3px;\\n  font-size: 12px; }\\n\\n.image-options-list.inactive {\\n  background: url('Yes_Check_Circle2.png'); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbGlkYWRlcy9TZXJ2aWNlQmFzaWNWaWV3L0M6XFxCUklDS1M0VVNcXEJhY2tlbmRcXGJyaWNrczR1cy9zcmNcXGFwcFxcdXRpbGlkYWRlc1xcU2VydmljZUJhc2ljVmlld1xcU2VydmljZUJhc2ljVmlldy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksYUFBYSxFQUFBOztBQUdqQjtFQUNJLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIscUJBQXFCO0VBQ3JCLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixlQUFlLEVBQUE7O0FBR25CO0VBQ0ksa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsZUFBZSxFQUFBOztBQUduQjtFQUVJLHdDQUErRCxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdXRpbGlkYWRlcy9TZXJ2aWNlQmFzaWNWaWV3L1NlcnZpY2VCYXNpY1ZpZXcuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRoLm5nMi1zbWFydC1hY3Rpb25zLXRpdGxlXHJcbntcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgICBwYWRkaW5nOiAwLjI1cmVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDAwcmVtO1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJkIC5jYXJkLXRpdGxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzcHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5jYXJkIC52YWx1ZS1maWVsZCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogM3B4O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcblxyXG4uY2FyZCAubG9jYXRpb24tZmllbGQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDNweDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmltYWdlLW9wdGlvbnMtbGlzdC5pbmFjdGl2ZVxyXG57XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi8uLi9hc3NldHMvaW1hZ2VzL1llc19DaGVja19DaXJjbGUyLnBuZ1wiKTtcclxufSJdfQ== */\"","module.exports = \"<div (click)=\\\"AddorRemove()\\\">\\r\\n  <!--<span class=\\\"heart\\\" [ngClass]=\\\"{'full' : (parameterfavorito.IsFavorite == true)}\\\">&hearts;</span>-->\\r\\n  <i class=\\\"mdi-heart\\\" [ngClass]=\\\"{'full' : (parameterfavorito.IsFavorite == true)}\\\"></i>\\r\\n</div>\\r\\n\"","module.exports = \".mdi-heart {\\n  display: inline-block;\\n  font-size: 20px;\\n  color: #4a4747;\\n  top: -10px;\\n  left: 0px;\\n  position: relative;\\n  font: 15px/1 \\\"Material Design Icons\\\"; }\\n\\n.full {\\n  color: #b61818; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbGlkYWRlcy9hZ3JlZ2FyZmF2b3JpdG9zL0M6XFxCUklDS1M0VVNcXEJhY2tlbmRcXGJyaWNrczR1cy9zcmNcXGFwcFxcdXRpbGlkYWRlc1xcYWdyZWdhcmZhdm9yaXRvc1xcYWdyZWdhcmZhdm9yaXRvcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsY0FBYztFQUNkLFVBQVU7RUFDVixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLG9DQUFvQyxFQUFBOztBQUd4QztFQUVFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3V0aWxpZGFkZXMvYWdyZWdhcmZhdm9yaXRvcy9hZ3JlZ2FyZmF2b3JpdG9zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1kaS1oZWFydCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBjb2xvcjogIzRhNDc0NztcclxuICAgIHRvcDogLTEwcHg7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBmb250OiAxNXB4LzEgXCJNYXRlcmlhbCBEZXNpZ24gSWNvbnNcIjtcclxufVxyXG5cclxuLmZ1bGwgXHJcbntcclxuICBjb2xvcjogI2I2MTgxODtcclxufSJdfQ== */\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { ServiceFavorite } from '../../modelos/servicefavorite.model';\r\nimport { SearchServiceService } from '../../services/Search-service.service';\r\nimport { RegisterResponse } from '../../modelos/Response/RegisterResponse.model';\r\nimport { GenericStorageService } from '../../services/genericstorage.service';\r\n\r\n@Component({\r\n  selector: 'app-agregarfavoritos',\r\n  templateUrl: './agregarfavoritos.component.html',\r\n  styleUrls: ['./agregarfavoritos.component.scss'],\r\n})\r\nexport class AgregarfavoritosComponent implements OnInit {\r\n  corazon = '';\r\n  @Input()parameterfavorito: ServiceFavorite = new ServiceFavorite();\r\n  \r\n  constructor(\r\n    private servicePublicaciones: SearchServiceService,\r\n    private genStorageFavoritos : GenericStorageService<ServiceFavorite[]>\r\n  ){}\r\n\r\n  ngOnInit() {\r\n    this.ValidarEstadoFavorito();\r\n  }\r\n\r\n  AddorRemove() {\r\n    this.parameterfavorito.IsFavorite = !this.parameterfavorito.IsFavorite;\r\n    this.servicePublicaciones.AgregarFavoritos(this.parameterfavorito).subscribe(respuesta => \r\n    {\r\n        var registroResponse: RegisterResponse = respuesta;\r\n    });\r\n\r\n    this.ActualizarListaLocal();\r\n  }\r\n\r\n  ValidarEstadoFavorito()\r\n  {\r\n    this.parameterfavorito.IsFavorite = false;\r\n    var listFavorite: ServiceFavorite[] = [];\r\n    listFavorite = this.genStorageFavoritos.getInformation('Cache_ServiceFavoriteList');\r\n\r\n    if(listFavorite == null)\r\n    {\r\n      return;\r\n    }\r\n\r\n    var index = listFavorite.findIndex(x=>x.IdService == this.parameterfavorito.IdService && x.TypeService == this.parameterfavorito.TypeService);\r\n    this.parameterfavorito.IsFavorite = (index != -1) ?  listFavorite[index].IsFavorite : false;   \r\n    console.log(this.parameterfavorito);\r\n  }\r\n\r\n  ActualizarListaLocal()\r\n  {\r\n      var listFavorite: ServiceFavorite[] = [];\r\n      listFavorite = this.genStorageFavoritos.getInformation('Cache_ServiceFavoriteList');\r\n\r\n      if(listFavorite == null)\r\n          listFavorite = []\r\n\r\n      if(this.parameterfavorito.IsFavorite)\r\n      {\r\n          listFavorite.push(this.parameterfavorito);\r\n      }\r\n      else\r\n      {\r\n        var index = listFavorite.findIndex(x=>x.IdService == this.parameterfavorito.IdService && x.TypeService == this.parameterfavorito.TypeService);\r\n        if(index != -1)\r\n            listFavorite.splice(index,1);\r\n      }\r\n      this.genStorageFavoritos.setInformation('Cache_ServiceFavoriteList', listFavorite);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            \\r\\n            <div class=\\\"card-body\\\" [ngClass]=\\\"{'SimpleStyle': (parameterRate?.IsSimpleStyle)}\\\">\\r\\n                <ngb-rating [ngClass]=\\\"{'SimpleStyle': (parameterRate?.IsSimpleStyle)}\\\" [(rate)]=\\\"currentRate\\\" max=\\\"{{stars}}\\\" [readonly]=\\\"parameterRate?.ReadOnly\\\">\\r\\n                  <ng-template let-fill=\\\"fill\\\">\\r\\n                      <span class=\\\"star\\\" [class.filled]=\\\"fill === 100\\\">&#9733;</span>\\r\\n                  </ng-template>\\r\\n                </ngb-rating>\\r\\n                <span style=\\\"padding-left: 10px;font-weight: 500;\\\" *ngIf=\\\"parameterRate?.InfoAdditional != ''\\\">{{parameterRate?.InfoAdditional}}</span>\\r\\n                <div *ngIf=\\\"!parameterRate?.HideText\\\" class=\\\"m-t-10\\\">Calificacion: <b>{{currentRate}}</b></div>\\r\\n            </div>\\r\\n\\r\\n            <button *ngIf=\\\"parameterRate?.ShowButton\\\" (click)=\\\"pasarstart($event)\\\">Calificar</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Input, Output, EventEmitter, OnInit, DebugElement } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-ngbd-calificacion',\r\n  templateUrl: './calificacion.component.html',\r\n  styles: [\r\n    `\r\n      .star {\r\n        font-size: 2rem;\r\n        color: #b0c4de;\r\n      }\r\n      .filled {\r\n        color: yellow;\r\n      }\r\n      .heart {\r\n        position: relative;\r\n        display: inline-block;\r\n        font-size: 3rem;\r\n        color: #d3d3d3;\r\n      }\r\n      .full {\r\n        color: red;\r\n      }\r\n      .half {\r\n        position: absolute;\r\n        display: inline-block;\r\n        overflow: hidden;\r\n        color: red;\r\n      }\r\n      .d-inline-flex.SimpleStyle \r\n      {\r\n        zoom: 50%;\r\n      }\r\n      .card-body.SimpleStyle \r\n      {\r\n        position: relative;\r\n        top: -20px;\r\n        left: -20px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class CalificacionComponent  implements OnInit \r\n{\r\n  ctrl = new FormControl(null, Validators.required);s\r\n  @Output() getRate = new EventEmitter;\r\n  @Input()parameterRate: any = {};\r\n  currentRate;\r\n  stars;\r\n\r\n  ngOnInit(): void \r\n  {\r\n    this.currentRate = (this.parameterRate.nStart != null ? this.parameterRate.nStart : 5);\r\n    this.stars = (this.parameterRate.maxStar != null ? this.parameterRate.maxStar : 5);\r\n  }\r\n\r\n  constructor(){}\r\n\r\n  pasarstart(event)\r\n  {\r\n  \tthis.getRate.emit({datos: this.currentRate});\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"form-group row p-b-15\\\">\\r\\n                    \\r\\n                    <app-alerta *ngIf=\\\"mensaje?.length > 0\\\"  [alerts] = \\\"mensaje\\\"></app-alerta>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"row p-b-15\\\">\\r\\n                            \\r\\n                            <div  (click)=\\\"CargarImagenes()\\\" class=\\\"col-7 input-group-prepend\\\">\\r\\n                                <span  class=\\\"input-group-text\\\">Cargar Imágenes</span>\\r\\n                            </div>\\r\\n                            <div  (click)=\\\"TomarFoto()\\\" class=\\\"col-5 input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text\\\">Tomar Foto</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div  class=\\\"row p-b-15\\\" style=\\\"font-size: small;\\\">\\r\\n                            <div *ngFor=\\\"let image of InfoServiceSpaceMultimedia;\\\" class=\\\"col-sm-2.5\\\" style=\\\"padding: 3px;\\\">\\r\\n                                    <img _ngcontent-c1='' height='80' width='80' alt='homepage' class='light-logo' src='http://bricks4us.azurewebsites.net/{{image.Content}}'/>\\r\\n                                    <!--<div class=\\\"CajaImagen\\\" style=\\\"background-image: url('http://bricks4us.azurewebsites.net/{{image.Content}}');\\\"></div>-->\\r\\n                                    <span (click)='EliminarImagen(image);' class=\\\"fa fa-trash btnEliminar-Imagen\\\"></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n</div>\"","import { Input, Component, OnInit} from '@angular/core';\r\n\r\nimport { PublicacionesServiceService } from '../../services/Publicaciones-service.service';\r\nimport {StorageServiceService} from '../../services/storage-service.service';\r\nimport { ImageResponse } from '../../modelos/Response/ImageResponse.model';\r\nimport { ServiceSpaceMultimedia } from '../../modelos/servicespacemultimedia.model';\r\nimport { GenericStorageService } from '../../services/genericstorage.service';\r\nimport { UrlBackendServices } from '../../services/AppServiceGlobal';\r\n\r\nimport { FileUploader, FileItem, ParsedResponseHeaders, FileUploaderOptions } from 'ng2-file-upload/ng2-file-upload';\r\nimport {ImagePicker, ImagePickerOptions} from '@ionic-native/image-picker/ngx';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-upload-images2',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.scss']\r\n})\r\n\r\nexport class UploadComponent implements OnInit \r\n{\r\n  @Input() ServiceUrl : string;\r\n  @Input() ServiceIndex : number;\r\n  @Input() NombreTipoServicio : string;\r\n\r\n  UrlBackend = UrlBackendServices;\r\n  results$: Observable<ImageResponse>;\r\n  InfoServiceSpaceMultimedia : ServiceSpaceMultimedia[];\r\n  imageURI:any;\r\n  imageFileName:any;\r\n  uploader: FileUploader;\r\n  uploaderOptions: FileUploaderOptions;\r\n\r\n  interval;\r\n  mensaje: any = [];\r\n\r\n  constructor(private storage:StorageServiceService, \r\n    private serviceImages: PublicacionesServiceService,\r\n    private genStorageServiceSpaceMultimedia : GenericStorageService<ServiceSpaceMultimedia[]>,\r\n    private imagePicker: ImagePicker,\r\n    private camera: Camera\r\n    ){ }  \r\n\r\n  ngOnInit() \r\n  {\r\n        this.ActualizarImagenes();\r\n        this.startTimer();\r\n  }\r\n\r\n  public uploadFile(imgbase64: string )\r\n  {\r\n        if(!imgbase64 || imgbase64 == null || imgbase64 == \"\" || imgbase64.length < 10)\r\n            return;  \r\n\r\n        this.serviceImages.ImageLoader(this.ServiceIndex, this.NombreTipoServicio, imgbase64).subscribe(respuesta=>\r\n        {\r\n            var registroResponse: ImageResponse = respuesta;\r\n            if(registroResponse != null && registroResponse.Exitoso)\r\n            {                \r\n                this.OnImageUploaded(registroResponse);\r\n            }\r\n            else{\r\n                this.mensaje = [{ id:2, type:'warning', message: registroResponse.MensajeResultado }];\r\n            }\r\n        },\r\n        error=>\r\n        {\r\n            this.mensaje = [{ id:2, type:'danger', message:error.statusText }];\r\n        });\r\n  }\r\n\r\n  public TomarFoto()\r\n  {\r\n    const options: CameraOptions = \r\n    {\r\n        quality: 50,\r\n        destinationType : this.camera.DestinationType.DATA_URL,\r\n        encodingType: this.camera.EncodingType.JPEG,\r\n        mediaType: this.camera.MediaType.PICTURE,\r\n        sourceType: this.camera.PictureSourceType.CAMERA\r\n    };\r\n\r\n    this.camera.getPicture(options).then((imageData) =>\r\n    {\r\n        this.uploadFile(imageData);\r\n    },\r\n    (error) =>{ console.log(error); });\r\n  }\r\n\r\n  public CargarImagenes()\r\n  {\r\n    const options: ImagePickerOptions = \r\n    {\r\n        quality: 50,\r\n        maximumImagesCount: 10,\r\n        outputType: 1\r\n    };\r\n\r\n    this.imagePicker.getPictures(options).then((results) =>\r\n    {\r\n      for(var i = 0; i<results.length; i++)\r\n      {\r\n            this.uploadFile(results[i]);\r\n      }\r\n    },\r\n    (error) =>{ console.log(error); });\r\n  }\r\n\r\n  public OnImageUploaded(resultado : ImageResponse)\r\n  {\r\n      if(resultado && resultado != null && resultado.Exitoso)\r\n      {  \r\n          var InfoServiceSpaceMultimedia\t: ServiceSpaceMultimedia[] = []\r\n          var genStorageServiceSpaceMultimedia : GenericStorageService<ServiceSpaceMultimedia[]> = new GenericStorageService<ServiceSpaceMultimedia[]>();\r\n          var NombreTipoServicio : string = resultado.ServiceName;\r\n          var ServiceIndex : string = resultado.Index;\r\n\r\n          InfoServiceSpaceMultimedia = genStorageServiceSpaceMultimedia.getInformation(\"InfoServiceSpaceMultimedia_\" + NombreTipoServicio + \"_\" + ServiceIndex);\r\n          if(!InfoServiceSpaceMultimedia || InfoServiceSpaceMultimedia == null)\r\n              InfoServiceSpaceMultimedia = [];\r\n\r\n          var serviceSpaceMultimedia = new ServiceSpaceMultimedia();\r\n          serviceSpaceMultimedia.Content = resultado.ImageUrl;\r\n\r\n          InfoServiceSpaceMultimedia.push(serviceSpaceMultimedia);\r\n          genStorageServiceSpaceMultimedia.setInformation(\"InfoServiceSpaceMultimedia_\" + NombreTipoServicio + \"_\" + ServiceIndex, InfoServiceSpaceMultimedia);\r\n      }\r\n  }\r\n\r\n  public startTimer() \r\n  {\r\n    this.interval = setInterval(() => \r\n    {\r\n        this.ActualizarImagenes();\r\n    },2000);\r\n  }\r\n\r\n  public pauseTimer() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  public ActualizarImagenes()\r\n  {\r\n      this.pauseTimer();\r\n\r\n      if(!this.InfoServiceSpaceMultimedia || this.InfoServiceSpaceMultimedia == null)\r\n          this.InfoServiceSpaceMultimedia = [];\r\n\r\n      var listadoAuxiliar =  this.genStorageServiceSpaceMultimedia.getInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_\" + this.ServiceIndex);   \r\n      if(listadoAuxiliar && listadoAuxiliar != null)\r\n      {\r\n\r\n          listadoAuxiliar.forEach(image => {\r\n\r\n              var infoImage = this.InfoServiceSpaceMultimedia.find(x=>x.Content == image.Content);\r\n              if(!infoImage || infoImage == null)\r\n              {\r\n\r\n                  this.InfoServiceSpaceMultimedia.push(image);\r\n              }\r\n          });\r\n      }      \r\n      \r\n      this.startTimer();\r\n\r\n\r\n\r\n  }\r\n\r\n  public EliminarImagen(infoImage : any)\r\n  {\r\n      var listadoAuxiliar =  this.genStorageServiceSpaceMultimedia.getInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_\" + this.ServiceIndex);   \r\n      var posArrayStorage = listadoAuxiliar.findIndex(x=>x.Content == infoImage.Content);\r\n      if(posArrayStorage != -1)\r\n      {\r\n          listadoAuxiliar.splice(posArrayStorage,1);\r\n          this.genStorageServiceSpaceMultimedia.setInformation(\"InfoServiceSpaceMultimedia_\" + this.NombreTipoServicio + \"_\" + this.ServiceIndex, listadoAuxiliar);\r\n      }    \r\n\r\n      var posArray = this.InfoServiceSpaceMultimedia.findIndex(x=>x.Content == infoImage.Content);\r\n      if(posArray != -1)\r\n      {\r\n          this.InfoServiceSpaceMultimedia.splice(posArray,1);\r\n      }    \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \".my-drop-zone {\\n  border: dotted 2px #dadada; }\\n\\n.nv-file-over {\\n  border: dotted 2px red; }\\n\\n/* Default class applied to drop zones on over */\\n\\n.another-file-over-class {\\n  border: dotted 2px green; }\\n\\n.CajaImagen {\\n  width: 80px;\\n  height: 80px;\\n  background-position: center;\\n  background-size: cover; }\\n\\n.btnEliminar-Imagen {\\n  position: relative;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  bottom: 18px;\\n  margin: 0 auto;\\n  padding: 3px;\\n  background: #00000005;\\n  color: #f2e6e673;\\n  background: #00000061;\\n  color: #f2e6e6; }\\n\\n.btnEliminar-Imagen:hover,\\n.btnEliminar-Imagen:focus {\\n  background: #00000061;\\n  color: #f2e6e6; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbGlkYWRlcy9maWxlLXVwbG9hZC9DOlxcQlJJQ0tTNFVTXFxCYWNrZW5kXFxicmlja3M0dXMvc3JjXFxhcHBcXHV0aWxpZGFkZXNcXGZpbGUtdXBsb2FkXFx1cGxvYWQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBCQUEwQixFQUFBOztBQUU1QjtFQUNFLHNCQUFzQixFQUFBOztBQUN0QixnREFBQTs7QUFDRjtFQUNFLHdCQUF3QixFQUFBOztBQUcxQjtFQUVFLFdBQVc7RUFDWCxZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLHNCQUFzQixFQUFBOztBQUd4QjtFQUVFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osY0FBYztFQUNkLFlBQVk7RUFFWixxQkFBcUI7RUFDckIsZ0JBQWdCO0VBRWhCLHFCQUFxQjtFQUNyQixjQUFjLEVBQUE7O0FBR2hCOztFQUdFLHFCQUFxQjtFQUNyQixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91dGlsaWRhZGVzL2ZpbGUtdXBsb2FkL3VwbG9hZC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWRyb3Atem9uZSB7XHJcbiAgYm9yZGVyOiBkb3R0ZWQgMnB4ICNkYWRhZGE7XHJcbn1cclxuLm52LWZpbGUtb3ZlciB7XHJcbiAgYm9yZGVyOiBkb3R0ZWQgMnB4IHJlZDtcclxufSAvKiBEZWZhdWx0IGNsYXNzIGFwcGxpZWQgdG8gZHJvcCB6b25lcyBvbiBvdmVyICovXHJcbi5hbm90aGVyLWZpbGUtb3Zlci1jbGFzcyB7XHJcbiAgYm9yZGVyOiBkb3R0ZWQgMnB4IGdyZWVuO1xyXG59XHJcblxyXG4uQ2FqYUltYWdlblxyXG57XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG4uYnRuRWxpbWluYXItSW1hZ2VuXHJcbntcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYm90dG9tOiAxOHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmc6IDNweDtcclxuXHJcbiAgYmFja2dyb3VuZDogIzAwMDAwMDA1OyAgXHJcbiAgY29sb3I6ICNmMmU2ZTY3MztcclxuXHJcbiAgYmFja2dyb3VuZDogIzAwMDAwMDYxO1xyXG4gIGNvbG9yOiAjZjJlNmU2O1xyXG59XHJcblxyXG4uYnRuRWxpbWluYXItSW1hZ2VuOmhvdmVyLFxyXG4uYnRuRWxpbWluYXItSW1hZ2VuOmZvY3VzXHJcbntcclxuICBiYWNrZ3JvdW5kOiAjMDAwMDAwNjE7XHJcbiAgY29sb3I6ICNmMmU2ZTY7XHJcbn0iXX0= */\"","\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertaComponent } from './Alerta/alerta.component';\r\nimport { UploadComponent } from './file-upload/upload.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { JsonpModule } from '@angular/http';\r\nimport { CalificacionComponent } from './calificacion/calificacion.component';\r\nimport { ListaSeleccionComponent } from './ListaSeleccion/ListaSeleccion.component';\r\nimport { ServiceBasicViewComponent } from './ServiceBasicView/ServiceBasicView.component';\r\nimport { BackButtonComponent } from './BackButton/BackButton.component';\r\nimport { AgregarfavoritosComponent } from './agregarfavoritos/agregarfavoritos.component';\r\n//import { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n//import { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AlertaComponent,\r\n    UploadComponent,\r\n    CalificacionComponent,\r\n    ListaSeleccionComponent,\r\n    ServiceBasicViewComponent,\r\n    BackButtonComponent,\r\n    AgregarfavoritosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    FileUploadModule,\r\n    JsonpModule,\r\n    ReactiveFormsModule,\r\n    //NgxDatatableModule,\r\n    //Ng2SmartTableModule\r\n  ],\r\n  exports: [\r\n    AlertaComponent,\r\n    UploadComponent,\r\n    CalificacionComponent,\r\n    ListaSeleccionComponent,\r\n    ServiceBasicViewComponent,\r\n    BackButtonComponent,\r\n    AgregarfavoritosComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [UploadComponent, ListaSeleccionComponent, ServiceBasicViewComponent]\r\n})\r\n\r\nexport class UtilidadesModule { }\r\n"],"sourceRoot":""}