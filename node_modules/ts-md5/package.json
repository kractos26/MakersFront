{
  "_from": "ts-md5@^1.2.4",
  "_id": "ts-md5@1.2.4",
  "_inBundle": false,
  "_integrity": "sha512-oW+rNjc9CAhalPFzbPWsLqPLzdNcJ8iSm+OXO+Uv+99r3PzCJuM5sVc0bO1eS+4LD2xv+nfU7ylBdwoemUV9Yw==",
  "_location": "/ts-md5",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ts-md5",
    "fetchSpec": "^1.2.4",
    "name": "ts-md5",
    "raw": "ts-md5@^1.2.4",
    "rawSpec": "^1.2.4",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ts-md5/-/ts-md5-1.2.4.tgz",
  "_shasum": "7030d7ba9134449deedf6f609d4b4509b94a5712",
  "_shrinkwrap": null,
  "_spec": "ts-md5@^1.2.4",
  "_where": "C:\\FrontEnd_New",
  "bugs": {
    "url": "https://github.com/cotag/ts-md5/issues"
  },
  "bundleDependencies": false,
  "contributors": [],
  "dependencies": {},
  "deprecated": false,
  "description": "TypeScript MD5 implementation",
  "devDependencies": {
    "@types/jasmine": "^2.5.53",
    "@types/node": "^8.0.16",
    "@types/webpack": "^3.0.5",
    "jasmine-core": "latest",
    "karma": "latest",
    "karma-chrome-launcher": "latest",
    "karma-jasmine": "latest",
    "karma-webpack": "latest",
    "ts-loader": "^2.3.1",
    "typescript": "latest",
    "webpack": "^3.3.0"
  },
  "directories": {},
  "homepage": "https://github.com/cotag/ts-md5",
  "license": "MIT",
  "main": "dist/md5.js",
  "maintainers": [
    {
      "name": "Stephen von Takach",
      "email": "steve@cotag.me"
    }
  ],
  "name": "ts-md5",
  "optionalDependencies": {},
  "peerDependencies": {},
  "readme": "# Introduction\n\nA MD5 implementation for TypeScript\n\n* Can handle Unicode strings\n* Supports incremental hashing\n* Works with Files and Blobs\n\nThis library also includes tools for:\n\n* Hashing a file or blob\n* A webworker for performing hashing\n* A webworker handler for requesting files or blobs to be hashed\n     * promise based\n     * files or blobs are queued for processing on the webworker\n\n\nBased on work by\n\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* AndrÃ© Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\n\n## Usage\n\n### Basic Hashing\n\n1. Import the class\n     * `import {Md5} from 'ts-md5/dist/md5';`\n2. Hash some things\n     * `Md5.hashStr('blah blah blah')` => hex:string\n     * `Md5.hashStr('blah blah blah', true)` => raw:Int32Array(4)\n     * `Md5.hashAsciiStr('blah blah blah')` => hex:string\n     * `Md5.hashAsciiStr('blah blah blah', true)` => raw:Int32Array(4)\n\nFor more complex uses:\n\n```typescript\n\nmd5 = new Md5();\n\n// Append incrementally your file or other input\n// Methods are chainable\nmd5.appendStr('somestring')\n    .appendAsciiStr('a different string')\n    .appendByteArray(blob);\n\n// Generate the MD5 hex string\nmd5.end();\n\n```\n\n\n### Hashing a File\n\nNOTE:: You have to make sure `ts-md5/dist/md5_worker.js` is made available in your build so it can be accessed directly by a browser\nIt should always remain as a seperate file.\n\n```typescript\n\nimport {ParallelHasher} from 'ts-md5/dist/parallel_hasher';\n\nlet hasher = new ParallelHasher('/path/to/ts-md5/dist/md5_worker.js');\nhasher.hash(fileBlob).then(function(result) {\n   console.log('md5 of fileBlob is', result);\n});\n\n```\n\n\n## Building from src\n\nThe project is written in typescript and transpiled into ES5.\n\n1. Install TypeScript: `npm install -g typescript` (if you haven't already)\n2. Configure compile options in `tsconfig.json`\n3. Perform build using: `tsc`\n\nYou can find more information here: https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\n\n## Type Definitions\n\nThese allow projects like jasmine to work with .ts files. This is here as a guide more than anything else.\nSee: https://github.com/typings/typings\n\n1. Install typings: `npm install typings --global` (if you haven't already)\n2. Download definitions: `typings install jasmine --ambient --save`\n     * Note: ambient means we are searching in https://github.com/DefinitelyTyped/DefinitelyTyped\n3. Reference the typings using `/// <reference path=\"../typings/main.d.ts\" />` from tests\n\nTo update typings:\n\n*  From command line run: `typings install`\n\n\n## Scripts\n\n1. Build Script: `npm run build`\n2. Test Script: `npm run test`\n\n\n## Publishing\n\n1. Sign up to https://www.npmjs.com/\n2. Configure `package.json` https://docs.npmjs.com/files/package.json\n3. run `npm publish` https://docs.npmjs.com/cli/publish\n\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cotag/ts-md5.git"
  },
  "scripts": {
    "build": "node node_modules/typescript/bin/tsc --p . && cat ./dist/md5_file_hasher.js ./src/worker.js >> ./dist/md5.js && grep -v exports. ./dist/md5.js > ./dist/md5_worker.js && node node_modules/typescript/bin/tsc",
    "test": "node node_modules/karma/bin/karma start karma.conf.js"
  },
  "types": "dist/md5.d.ts",
  "version": "1.2.4"
}
